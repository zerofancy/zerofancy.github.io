<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机组成原理 on 归零幻想</title>
    <link>https://ntutn.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in 计算机组成原理 on 归零幻想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>CC BY-SA 4.0</copyright>
    <lastBuildDate>Mon, 13 May 2019 03:11:37 +0800</lastBuildDate><atom:link href="https://ntutn.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机组成原理笔记</title>
      <link>https://ntutn.top/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 May 2019 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</guid>
      <description>概述 计算机组成原理马上就要期中考试了，我也在积极准备复习，顺着课本也做了一波笔记，把每个部分的知识点都整理了一下。没理解的暂时还空着（比如海明校验码），有些整理起来不方便的也暂时空着，回头去查课本吧。
结课了，顺着课本捋了一遍，做的一些笔记：
计算机组成原理 概述 计算机硬件 采用存储程序工作方式。 由运算器、控制器、存储器、输入设备、输出设备部件组成。 存储器：存储数据/指令 控制器：控制指令的自动执行 运算器：加减乘除、逻辑运算 操作人员通过输入输出设备控制计算机。 计算机内部以二进制表示指令和数据 指令由操作码和地址码组成。 总线：传输信息的介质。 ALU：数据处理部件，执行算数和逻辑运算。
计算机软件 计算机系统层次结构 应用（问题） 最终用户算法 程序员编程（语言）操作系统/虚拟机指令集体系结构（ISA）架构师微体系结构功能部件/RTL 电子工程师电路器件机器级语言 和运行程序的计算机底层结构密切相关。 可读性差，不易于记忆。
汇编语言 机器语言 高级语言 和底层计算机结构关系不大。 可读性相当较好。 大多数程序员使用高级语言编写程序。
程序设计语言处理系统 汇编程序：汇编器，汇编语言》机器语言 解释程序：解释器，将源程序中的语句按顺序逐条翻译并立即执行。 编译程序：编译器，高级语言》汇编语言/机器语言。 计算机系统的不同用户 最终用户 使应用程序完成特定任务的用户。
简单的人机交互界面、安装在计算机中的相关应用程序。
系统管理员 利用操作系统等软件提供的功能对系统进行配置管理维护的操作人员。
部分硬件层面、系统管理层面、相关实用程序和人机交互界面。
应用程序员 使用高级语言编制应用软件的程序员。
硬件、操作系统提供的编程接口、人机交互界面、实用程序、相关的语言程序处理系统。
系统程序员 设计和开发系统软件的程序员。
计算机底层相关硬件和系统结构。
一个人可以既是最终用户，又是系统管理员、…… ISA处于硬件和软件交界面，是计算机系统核心部分。
程序开发与执行过程 对于
#include&amp;lt;stdio.h&amp;gt; int main(){ printf(&amp;#34;Hello World!\n&amp;#34;); } 通过程序编辑软件得到hello.c 将hello.c预处理、编译、汇编、链接，生成可执行目标程序 gcc -o hello hello.</description>
    </item>
    
  </channel>
</rss>
