<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MacOS on 归零幻想</title>
    <link>https://ntutn.top/tags/macos/</link>
    <description>Recent content in MacOS on 归零幻想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>CC BY-SA 4.0</copyright>
    <lastBuildDate>Mon, 06 Jun 2022 12:28:23 +0800</lastBuildDate><atom:link href="https://ntutn.top/tags/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用自动操作修改壁纸</title>
      <link>https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E6%93%8D%E4%BD%9C%E4%BF%AE%E6%94%B9%E5%A3%81%E7%BA%B8/</link>
      <pubDate>Mon, 06 Jun 2022 12:28:23 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E6%93%8D%E4%BD%9C%E4%BF%AE%E6%94%B9%E5%A3%81%E7%BA%B8/</guid>
      <description>好久没水博客了，今天折腾折腾一个一直在系统里但是没用过的工具：自动操作（Automator）.
首先打开自动操作，新建一个文稿。选择“应用程序”最终可以像其他app一样，点击就执行。但我希望的是每天自动更换，所以这里我选择“日历提醒”。
下载壁纸 “自动操作”的使用方法还是很简单的，把左边的命令拖动过来稍加编辑就可以了。所以，我们得到了
这里用的是Unsplash提供的随机壁纸服务，壁纸还是很合我的胃口的。图中URL：https://source.unsplash.com/random/3584x2240。这里的“3584x2240”根据你的显示器分辨率填写。
设置壁纸 虽然“自动操作”的资源库中有“设置壁纸”这个能力，但我实际测试发现它只能改当前屏幕的壁纸，对于我用双屏的来说就比较难受了。因而这里要用Apple Script来实现：
图中的脚本为：
on run {input, parameters} set theFile to first item of input set filename to the POSIX path of theFile tell application &amp;quot;System Events&amp;quot; tell every desktop set picture to filename end tell end tell return filename end run 清理垃圾 这个简单，删除所有不是今天创建的图片就行了。
每天执行 保存后，打开日程应用，可以看到出现了一条刚刚添加的日程。使用Command+E快捷键修改日程，“重复”改为每天。最终结果：
 最后效果
摸鱼结束，我去搬砖了。</description>
    </item>
    
    <item>
      <title>干掉macOS的OCSP</title>
      <link>https://ntutn.top/posts/%E5%B9%B2%E6%8E%89macos%E7%9A%84ocsp/</link>
      <pubDate>Sun, 21 Feb 2021 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E5%B9%B2%E6%8E%89macos%E7%9A%84ocsp/</guid>
      <description>苹果这两天摊上事了，有不少用户说自己的设备打开应用程序会卡好几分钟，然后分析发现是苹果的OCSP校验导致的。
当启动一个新应用程序的时候，系统会把其hash发送到ocsp.apple.com用于校验，而这次是这个服务挂了但是能ping通……
这个事情引起不小的讨论，主要集中在有关隐私的担忧上。本来我没有太在意，但测试发现这好像是我每次休眠恢复后触摸板卡几秒的元凶……
那对不起了。
echo &amp;#34;127.0.0.1 ocsp.apple.com&amp;#34; | sudo tee -a /etc/hosts 反正还有SEP把门呢。</description>
    </item>
    
    <item>
      <title>禁用macOS的窗口标签</title>
      <link>https://ntutn.top/posts/%E7%A6%81%E7%94%A8macos%E7%9A%84%E7%AA%97%E5%8F%A3%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Tue, 22 Dec 2020 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E7%A6%81%E7%94%A8macos%E7%9A%84%E7%AA%97%E5%8F%A3%E6%A0%87%E7%AD%BE/</guid>
      <description>作为一个对更新相对激进的用户，我当然是第一时间升级了最新的macOS Big Sur。说实在的，这名字给我的第一印象并不好，因为被我看成了『Big Bug』。
圆角变大了，还有我一开始比较喜欢的功能，姑且称之为窗口标签。在BigSur中，当你打开两个全屏的Android Studio，它们将出现在同一个窗口，窗口上方出现不同的标签页，和浏览器一样。
好景不长，这个功能表现很不稳定，我不得不考虑干掉这个功能。如果只是没有成功触发也就算了，大不了当没升级用，但它常常会把一些弹出窗口也搞成和原窗口并列的标签。比如当你rename一个文件时，弹出的窗口有时就会并列到标签上，然后Android Studio就卡死了。
好吧，既然它开始影响我的工作效率了，我就找了找禁用的方法1。
defaults write com.google.android.studio AppleWindowTabbingMode manual   来自https://www.reddit.com/r/androiddev/comments/jtbl4m/has_anyone_updated_to_macos_big_sur_and_is/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
  </channel>
</rss>
