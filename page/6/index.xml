<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>归零幻想</title>
    <link>https://ntutn.top/</link>
    <description>Recent content on 归零幻想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>CC BY-SA 4.0</copyright>
    <lastBuildDate>Thu, 09 Jun 2022 17:02:54 +0800</lastBuildDate>
    
        <atom:link href="https://ntutn.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>图书管理系统</title>
        <link>https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Sat, 13 Apr 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/ -&lt;p&gt;翻出了以前写的C++作业，图书管理系统，虽然挺简单的，但留下纪念下吧。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;CUser&lt;/span&gt;
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; code;      &lt;span style=&#34;color:#228b22&#34;&gt;//表示用户编号；
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; name[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];  &lt;span style=&#34;color:#228b22&#34;&gt;//表示用户姓名
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    CUser()
    {
        ;
    };   &lt;span style=&#34;color:#228b22&#34;&gt;// 默认构造函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CUser(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; id, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; na[])
    {
        code=id;
        strcpy(name,na);
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//构造函数，初始化用户信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setcode&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n)
    {
        code=n;
    };      &lt;span style=&#34;color:#228b22&#34;&gt;//用来设置用户编号
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;getcode&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; code;
    };          &lt;span style=&#34;color:#228b22&#34;&gt;//用来获取用户编号
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setname&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; na[])
    {
        strcpy(name,na);
    };  &lt;span style=&#34;color:#228b22&#34;&gt;//用来设置用户姓名
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;* &lt;span style=&#34;color:#008b45&#34;&gt;getname&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; name;
    };        &lt;span style=&#34;color:#228b22&#34;&gt;//用来获取用户姓名
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;show&lt;/span&gt;()
    {
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;code&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;姓名：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;endl;
    };           &lt;span style=&#34;color:#228b22&#34;&gt;//用来显示用户的基本信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;};
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;CBook&lt;/span&gt;
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; code;              &lt;span style=&#34;color:#228b22&#34;&gt;//图书编号
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; name[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];      &lt;span style=&#34;color:#228b22&#34;&gt;//图书名称
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Is_Stock;          &lt;span style=&#34;color:#228b22&#34;&gt;//true为在架，false为借出
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Is_Existing;       &lt;span style=&#34;color:#228b22&#34;&gt;//true为存在, false为删除
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    CBook()
    {
        ;
    }; &lt;span style=&#34;color:#228b22&#34;&gt;//默认构造函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CBook(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; no,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; na[])
    {
        code=no;
        strcpy(name,na);
        Is_Stock=&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;;
        Is_Existing=&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;;
    };    &lt;span style=&#34;color:#228b22&#34;&gt;//构造函数，初始化图书信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setcode&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n)
    {
        code=n;
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//设置图书编号
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;getcode&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; code;
    };    &lt;span style=&#34;color:#228b22&#34;&gt;//获取图书编号
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setname&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; na[])
    {
        strcpy(name,na);
    };    &lt;span style=&#34;color:#228b22&#34;&gt;//设置图书名称
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;* &lt;span style=&#34;color:#008b45&#34;&gt;getname&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; name;
    };  &lt;span style=&#34;color:#228b22&#34;&gt;//获取图书名称
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt;  &lt;span style=&#34;color:#008b45&#34;&gt;get_Stock&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Is_Stock;
    };  &lt;span style=&#34;color:#228b22&#34;&gt;//获取图书是否在库信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;set_Stock&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; isstock)
    {
        Is_Stock=isstock;
    };&lt;span style=&#34;color:#228b22&#34;&gt;// 设置图书是否在库信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt;  &lt;span style=&#34;color:#008b45&#34;&gt;get_Existing&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Is_Existing;
    };&lt;span style=&#34;color:#228b22&#34;&gt;//获取存在标志
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;set_Existing&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; isex)
    {
        Is_Existing=isex;
    };&lt;span style=&#34;color:#228b22&#34;&gt;//设置存在标志
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;};
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;CReader&lt;/span&gt;:&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; CUser
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Is_Existing;  &lt;span style=&#34;color:#228b22&#34;&gt;//true存在，false删除
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Is_Borrowing;  &lt;span style=&#34;color:#228b22&#34;&gt;//true借过书，false没有借书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CBook brbook;     &lt;span style=&#34;color:#228b22&#34;&gt;//表示读者所借的图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    CReader()
    {
        CUser();
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//构造函数，初始化读者信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CReader(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; id, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; na[])
    {
        CUser(id,na);
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//构造函数，初始化读者信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;get_Existing&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Is_Existing;
    };        &lt;span style=&#34;color:#228b22&#34;&gt;//用来获取删除标志
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;set_Existing&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; isex)
    {
        Is_Existing=isex;
    };     &lt;span style=&#34;color:#228b22&#34;&gt;//用来设置删除标志
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;get_Borrowing&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Is_Borrowing;
    };      &lt;span style=&#34;color:#228b22&#34;&gt;//用来获取读者借阅情况
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;set_Borrowing&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; isbo)
    {
        Is_Borrowing=isbo;
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//用来设置读者借阅情况
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setbrbook&lt;/span&gt;(CBook bt)
    {
        brbook=bt;
        Is_Borrowing=&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;;
    };  &lt;span style=&#34;color:#228b22&#34;&gt;//用来记录读者结束信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CBook &lt;span style=&#34;color:#008b45&#34;&gt;getbrbook&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; brbook;
    };     &lt;span style=&#34;color:#228b22&#34;&gt;//用来获取读者结束信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;show&lt;/span&gt;()
    {
        CUser::show();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(Is_Borrowing)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;当前借书：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;brbook.getname()&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;当前用户没有借书！&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
    };               &lt;span style=&#34;color:#228b22&#34;&gt;//重写基类成员，显示读者的基本信息情况和借书情况
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;};
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;CReaderManager&lt;/span&gt;
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    CReader rdarray[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];&lt;span style=&#34;color:#228b22&#34;&gt;// 存储读者信息的集合
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; top;      &lt;span style=&#34;color:#228b22&#34;&gt;//当前数组中存储的读者数量
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    CReaderManager()
    {
        top=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    };  &lt;span style=&#34;color:#228b22&#34;&gt;// 构造函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    ~CReaderManager()
    {
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//析构函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;addreaders&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_no;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入读者的相关信息：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入读者的名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入读者的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp_no;
        CReader tmp_reader(tmp_no,tmp);
        rdarray[top]=tmp_reader;
        top++;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;读者添加成功。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
    };          &lt;span style=&#34;color:#228b22&#34;&gt;//添加读者
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;findreaders&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; suffix)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(rdarray[i].getcode()==suffix)
            {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;&lt;span style=&#34;color:#228b22&#34;&gt;//返回在库中的位置。
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#228b22&#34;&gt;//未找到
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    };     &lt;span style=&#34;color:#228b22&#34;&gt;//查找读者，这个函数用于借书还书操作。
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;findreaders&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入需要查找的用户的名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strcmp(rdarray[i].getname(),tmp)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
            {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
    };            &lt;span style=&#34;color:#228b22&#34;&gt;//查找读者，这个函数用于读者维护操作
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;editreaders&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; code;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num=findreaders();
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_ex;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(num==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您要的用户没有找到。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户姓名：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;rdarray[num].getname()&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;rdarray[num].getcode()&amp;lt;&amp;lt;endl;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(rdarray[num].get_Borrowing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户借了&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;rdarray[num].getbrbook().getname()&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户没有借任何书。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(rdarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户状态正常。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户已经被删除。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入修改后的姓名：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        rdarray[num].setname(tmp);
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入修改后的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;code;
        rdarray[num].setcode(code);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!rdarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户被标记为删除状态，是否恢复？(1恢复/0不恢复)&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            cin&amp;gt;&amp;gt;tmp_ex;
            rdarray[num].set_Existing(tmp_ex);
        }
    };          &lt;span style=&#34;color:#228b22&#34;&gt;//编辑读者信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;delreaders&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_code;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入要删除的用户的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp_code;
        num=findreaders(tmp_code);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(num==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户未找到，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!rdarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户已经被删除，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!rdarray[num].get_Borrowing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户有书未还，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        rdarray[num].set_Existing(&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;);
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户删除完毕。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
    };          &lt;span style=&#34;color:#228b22&#34;&gt;//删除读者，读者如果借书要还书后才能删除
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;listreaders&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(rdarray[i].get_Existing())
            {
                cout&amp;lt;&amp;lt;rdarray[i].getcode()&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;rdarray[i].getname()&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(rdarray[i].get_Borrowing())
                {
                    cout&amp;lt;&amp;lt;rdarray[i].getbrbook().getname();
                }
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
                {
                    cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;未借书&amp;#34;&lt;/span&gt;;
                }
                cout&amp;lt;&amp;lt;endl;
            }
        }
    };           &lt;span style=&#34;color:#228b22&#34;&gt;//显示所有读者
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CReader&amp;amp; getreader(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; p)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(p&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;||p&amp;gt;=top)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;下标越界。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            p=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; rdarray[p];
    }
};
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;CBookManager&lt;/span&gt;
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    CBook btarray[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];                   &lt;span style=&#34;color:#228b22&#34;&gt;//图书集合
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; top;                         &lt;span style=&#34;color:#228b22&#34;&gt;//当前数组中存储的图书数量
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    CBookManager()
    {
        top=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    };
    ~CBookManager()
    {
        ;
    };
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;addbooks&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_no;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入图书的相关信息：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入图书的名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入图书的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp_no;
        CBook tmp_book(tmp_no,tmp);
        btarray[top]=tmp_book;
        top++;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书入库成功。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
    };    &lt;span style=&#34;color:#228b22&#34;&gt;//添加图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;findbooks&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; suffix)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(btarray[i].getcode()==suffix)
            {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;&lt;span style=&#34;color:#228b22&#34;&gt;//返回图书在书库中的位置。
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#228b22&#34;&gt;//未找到图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    };  &lt;span style=&#34;color:#228b22&#34;&gt;//查找图书，这个函数用于借书还书操作
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;findbooks&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入需要查找的图书的名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strcmp(btarray[i].getname(),tmp)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
            {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
    };  &lt;span style=&#34;color:#228b22&#34;&gt;//查找图书，用于图书维护操作
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;editbooks&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp[&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;];
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; code;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num=findbooks();
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_ex;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(num==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您要的图书没有找到。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;btarray[num].getname()&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;btarray[num].getcode()&amp;lt;&amp;lt;endl;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(btarray[num].get_Stock())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书在架。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书已经借出。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(btarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书状态正常。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书已经被删除。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        }
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入修改后的名称：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp;
        btarray[num].setname(tmp);
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入修改后的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;code;
        btarray[num].setcode(code);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!btarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书被标记为删除状态，是否恢复？(1恢复/0不恢复)&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            cin&amp;gt;&amp;gt;tmp_ex;
            btarray[num].set_Existing(tmp_ex);
        }
    };     &lt;span style=&#34;color:#228b22&#34;&gt;//编辑图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;delbooks&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_code;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入要删除的图书的编号：&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;tmp_code;
        num=findbooks(tmp_code);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(num==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书未找到，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!btarray[num].get_Existing())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书已经被删除，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!btarray[num].get_Stock())
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书被借出，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
        btarray[num].set_Existing(&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;);
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;图书删除完毕。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
    };   &lt;span style=&#34;color:#228b22&#34;&gt;//  删除图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;listbooks&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;top; i++)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(btarray[i].get_Stock()&amp;amp;&amp;amp;btarray[i].get_Existing())
            {
                cout&amp;lt;&amp;lt;btarray[i].getcode()&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;btarray[i].getname()&amp;lt;&amp;lt;endl;
            }
        }
    } ;  &lt;span style=&#34;color:#228b22&#34;&gt;//显示全部图书
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    CBook&amp;amp; getbook(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; p)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(p&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;||p&amp;gt;=top)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;下标越界。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
            p=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; btarray[p];
    }
};
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showmenu&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; re=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(re&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;||re&amp;gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;6&amp;#39;&lt;/span&gt;)
    {
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;功能菜单&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;1.读者管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;2.借书管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;3.还书管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;4.图书管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;5.文件存储&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;6.退出&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入对应序号并回车&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;re;
        &lt;span style=&#34;color:#228b22&#34;&gt;//cout&amp;lt;&amp;lt;re;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; re-&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showmenu1&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; re=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(re&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;||re&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;)
    {
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;功能菜单--读者管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;1.添加读者&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;2.删除读者&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;3.修改读者&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;4.查找读者&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入对应序号并回车&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;re;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; re;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showmenu4&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; re=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(re&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;||re&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;)
    {
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;功能菜单--图书管理&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;1.添加图书&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;2.删除图书&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;3.修改图书&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;4.查找图书&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入对应序号并回车&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;re;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; re;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showmenu5&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; re=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(re&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;||re&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;)
    {
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;功能菜单--文件存储&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;1.读取&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;2.保存&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请输入对应序号并回车&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
        cin&amp;gt;&amp;gt;re;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; re;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    CReaderManager cm1;
    CBookManager cb1;
    ofstream file;
    ifstream file2;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; cz=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_us;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_bo;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;)
    {
        cz=showmenu();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(cz)
        {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
            cz=showmenu1();
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(cz)
            {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
                cm1.addreaders();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;:
                cm1.delreaders();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;:
                cm1.editreaders();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;:
                cm1.findreaders();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;:
            tmp_bo=cb1.findbooks();
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_bo==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您要借的书没有找到。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!cb1.getbook(tmp_bo).get_Existing())
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您要借的书已经被删除，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!cb1.getbook(tmp_bo).get_Stock())
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您要借的书已经被借出，操作失败。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            tmp_us=cm1.findreaders();
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_bo==-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您使用的身份无效。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!cm1.getreader(tmp_us).get_Existing())
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;您的账户已经被管理员删除。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(cm1.getreader((tmp_us)).get_Borrowing())
            {
                cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;请把您借的书还了再借。&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            cm1.getreader(tmp_us).set_Borrowing(&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;);
            cm1.getreader(tmp_us).setbrbook(cb1.getbook(tmp_bo));
            cb1.getbook(tmp_bo).set_Stock(&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;:
            cm1.editreaders();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;:
            cz=showmenu4();
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(cz)
            {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
                cb1.addbooks();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;:
                cb1.delbooks();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;:
                cb1.editbooks();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;:
                cb1.findbooks();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;:
            cz=showmenu5();
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(cz)
            {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
                file2.open(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cb1.dat&amp;#34;&lt;/span&gt;,ios::binary);
                &lt;span style=&#34;color:#228b22&#34;&gt;//二进制打开，缺省为文本，ios::out,ios::in,文本输入输出用&amp;lt;&amp;lt;,&amp;gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file2.read((&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; *)&amp;amp;cb1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(cb1));
                &lt;span style=&#34;color:#228b22&#34;&gt;///int num=file2.gcount(); //获取读到文件的大小
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file2.close();
                file2.open(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cm1.dat&amp;#34;&lt;/span&gt;,ios::binary);
                &lt;span style=&#34;color:#228b22&#34;&gt;//二进制打开，缺省为文本，ios::out,ios::in,文本输入输出用&amp;lt;&amp;lt;,&amp;gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file2.read((&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; *)&amp;amp;cm1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(cm1));
                &lt;span style=&#34;color:#228b22&#34;&gt;///int num=file2.gcount(); //获取读到文件的大小
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file2.close();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;:
                file.open(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cb1.dat&amp;#34;&lt;/span&gt;,ios::binary);
                &lt;span style=&#34;color:#228b22&#34;&gt;//缓存的类型是 unsigned char *，需要类型转换
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file.write((&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; *)&amp;amp;cb1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(cb1));  &lt;span style=&#34;color:#228b22&#34;&gt;//winServer为类对象
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file.close();
                file.open(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cm1.dat&amp;#34;&lt;/span&gt;,ios::binary);
                &lt;span style=&#34;color:#228b22&#34;&gt;//缓存的类型是 unsigned char *，需要类型转换
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file.write((&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; *)&amp;amp;cm1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(cm1));  &lt;span style=&#34;color:#228b22&#34;&gt;//winServer为类对象
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                file.close();
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            }
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;:
            exit(&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>学生管理系统</title>
        <link>https://ntutn.top/posts/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Sat, 13 Apr 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/ -&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;翻出了以前C语言C实验的大作业，当时搞了好多奇技淫巧，最终拿到99分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;学生成绩管理系统v6.0是由软件工程1702刘海鑫设计的一款用于学生成绩管理的软件。&lt;/p&gt;
&lt;h2 id=&#34;文件列表&#34;&gt;文件列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stuv6.0.exe	主体程序，用于实现整体功能。&lt;/li&gt;
&lt;li&gt;main.dat	程序的数据文件，用于存储学生信息。&lt;/li&gt;
&lt;li&gt;goodbye.bmp	程序退出时加载的图片。&lt;/li&gt;
&lt;li&gt;desktop.ini	修改程序所在文件夹的图标。&lt;/li&gt;
&lt;li&gt;consoletest.exe	编译的au3程序，用于辅助输入中文。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-autoit&#34; data-lang=&#34;autoit&#34;&gt;$re=InputBox(&amp;quot;Input&amp;quot;,&amp;quot;You can input your massage now.(支持中文)&amp;quot;)
ConsoleWrite($re)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;code.dat	密码存储文件。该文件存储的是xor算法加密的账号密码。&lt;/li&gt;
&lt;li&gt;black.bmp	一张纯黑的图片，用于清除控制台加载图片的痕迹。2018年1月20日使用了image /d清除图片，本文件不再使用。&lt;/li&gt;
&lt;li&gt;background.bmp	程序启动时加载的图片。&lt;/li&gt;
&lt;li&gt;about.rtf	程序的说明文档。&lt;/li&gt;
&lt;li&gt;scaned.txt	存储用户输入的临时文件，一般会自动清除。&lt;/li&gt;
&lt;li&gt;subjects.dat	存储科目的名称，每行一个，最多允许50个，可用记事本直接打开编辑。&lt;/li&gt;
&lt;li&gt;image.exe	外部程序，用于加载图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;使用说明&#34;&gt;使用说明&lt;/h2&gt;
&lt;p&gt;双击&lt;code&gt;stuv6.0.exe&lt;/code&gt;，程序启动。&lt;/p&gt;
&lt;p&gt;待启动图片显示过后，出现密码输入框，回车确认输入。&lt;/p&gt;
&lt;p&gt;默认账号：&lt;code&gt;admin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认密码：&lt;code&gt;admin888&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输入密码时如果输入~符号，将弹出一个信息框提示输入。这是为了便于输入中文和特殊符号。&lt;/p&gt;
&lt;p&gt;本程序的密码存储是xor运算的结果，仅用于比对密码是否正确。&lt;/p&gt;
&lt;p&gt;接下来进入主菜单。菜单使用黄色为底色，红色标定选中项。你可以按上下键选择，或直接按项目对应数字，回车确认。&lt;/p&gt;
&lt;h2 id=&#34;开发日志&#34;&gt;开发日志&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2018年3月10日，加入了控制台窗口大小控制的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改了exe文件的图标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;改用外部程序image.exe加载图片，并修改gotoxy函数的使用，成功使代码兼容了gun gcc系列编译器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试WIN7运行效果，图片加载错位，无法全屏，其他功能不受影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在科目分析功能加入分层成绩展示，至此，程序主体开发完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入查找功能，查找方式为遍历，依据为id或姓名。
同理，加入按id排序、按姓名的字典顺序排序。
数据排序功能，选择后弹出二级菜单，进行升序排序或降序排序。
排序的结果不会保存。
排序后将自动展示排序结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入了科目分析，统计各科总分平均分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除学生功能准备完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将修改密码部分移出主函数，便于管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学生信息展示准备完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加学生功能准备完成，界面比较简陋。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现有点控制台用BitBlt画的图不会自动清除，于是找了一张全黑的图片将其覆盖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现在WIN7等系统控制台加载图片会出现错位，暂时不打算解决。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始准备程序主体功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记事本太单调，决定将about改为写字板，内容为本文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现了atexit函数，于是顺理成章地加入了程序退出图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到一个取巧的方法。控制台也是一个窗口，获取了他的句柄就可以在上面用BitBlt直接画图了吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;决定加入加载启动退出图片功能。可是Windows环境下C语言直接调用GDI常常导致系统蓝屏。虽然直接用其他语言就可以轻松写出，但总是有点不甘心。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入了about，system(&amp;ldquo;notepad.exe about.txt&amp;rdquo;)实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入了密码修改功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现并修正了“窗口”覆盖时的一个BUG。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成功实现菜单功能！上下键控制菜单移动，回车选择目标。亦可直接按选项对应数字移动菜单项。函数原型：int showMenu(char txt[][50],int n,int selected,int X,int Y)
txt是各菜单的文本。
n是菜单项总数目。
selected为当前选中项。
X,Y为菜单加载的坐标。
函数返回值为用户最终选定项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现getch对中文兼容不好。为了方便输入中文密码，用AU3写了控制台程序：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在getch检测到用户输入~后即打开该程序输入数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;制作了密码登录界面，用户名用fgets扫描，password用getch检测。getch检测到后输出*。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用前面的函数实现了伪信息框（图左），虽然和系统的信息框（图右）没得比，但在控制台下做出这个水平我还是知足了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UE的控制台与程序兼容性实在不行，改用code blocks作为IDE，编译器使用gcc for windows。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过gotoxy和严格的坐标计算实现了绘制伪窗口功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现了函数gotoxy(x,y)，可以控制光标输出位置，但好像移植性不好，比如GUN系列编译器就是另一个函数。决定还是使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最终暂时选定XOR算法，代码：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;准备用户登录验证方案，由经验打算采用XOR算法或MD5算法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到了合理的颜色控制方案，但似乎并不是所有控制台都能使用（UltraEdit DOS Command就不能用），不过暂时就这样了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;决定将界面制作得精美一些。查找资料。找到DOS命令color可以改控制台颜色方案，但只能同时更改整个控制台的颜色，怎么看都不舒服，放弃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到DOS指令title可以直接修改控制台标题。控制台标题改为“学生成绩管理系统V6.0”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选定课题为学生成绩管理系统，总体难度不大，毕竟书上范例改一改就是标准答案了。但我决定还是挑战一下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://ntutn.top/res/img/stu1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ntutn.top/res/img/stu2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ntutn.top/res/img/stu3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;stdlib.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;string.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//#include &amp;lt;conio.h&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;math.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;miniMessage&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*msg);
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showExitPic&lt;/span&gt;();
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;typedef HWND (WINAPI *PROCGETCONSOLEWINDOW)();//图片加载
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;PROCGETCONSOLEWINDOW GetConsoleWindow;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;PrintChar&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; *ch,UINT count,UINT x,UINT y)  &lt;span style=&#34;color:#228b22&#34;&gt;//在坐标(x,y)处输出字符串ch,ch里有count个字符
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;{
    HANDLE h=GetStdHandle(STD_OUTPUT_HANDLE);
    COORD pos;
    ULONG unuse;
    pos.X=x;
    pos.Y=y;
    CONSOLE_SCREEN_BUFFER_INFO bInfo; &lt;span style=&#34;color:#228b22&#34;&gt;// 窗口缓冲区信息
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    GetConsoleScreenBufferInfo(h, &amp;amp;bInfo );
    WriteConsoleOutputCharacterA(h,ch,count,pos,&amp;amp;unuse);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;color&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;short&lt;/span&gt; x) &lt;span style=&#34;color:#228b22&#34;&gt;//自定义函根据参数改变颜色
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(x&amp;gt;=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; x&amp;lt;=&lt;span style=&#34;color:#b452cd&#34;&gt;15&lt;/span&gt;)&lt;span style=&#34;color:#228b22&#34;&gt;//参数在0-15的范围颜色
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);    &lt;span style=&#34;color:#228b22&#34;&gt;//只有一个参数，改变字体颜色
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//默认的颜色白色
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), &lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;);
    &lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    颜色函数SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),前景色 | 背景色 | 前景加强 | 背景加强);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;        前景色：数字0-15 或 FOREGROUND_XXX 表示  （其中XXX可用BLUE、RED、GREEN表示）
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;        前景加强：数字8 或 FOREGROUND_INTENSITY 表示
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;        背景色：数字16 32 64 或 BACKGROUND_XXX 三种颜色表示
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;        背景加强： 数字128 或 BACKGROUND_INTENSITY 表示
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    主要应用：改变指定区域字体与背景的颜色
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    前景颜色对应值：
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　0=黑色                8=灰色　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;      　1=蓝色                9=淡蓝色        十六进制        　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　2=绿色                10=淡绿色       0xa        　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　3=湖蓝色              11=淡浅绿色     0xb　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　4=红色                12=淡红色       0xc　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　5=紫色                13=淡紫色       0xd        　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　6=黄色                14=淡黄色       0xe        　　
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　7=白色                15=亮白色       0xf
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    　　也可以把这些值设置成常量。
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    */&lt;/span&gt;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;gotoxy&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; x,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; y)
{
    &lt;span style=&#34;color:#228b22&#34;&gt;//COORD是Windows API中定义的一种结构，表示一个字符在控制台屏幕上的坐标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    COORD cor;
    &lt;span style=&#34;color:#228b22&#34;&gt;//句柄
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    HANDLE hout;
    &lt;span style=&#34;color:#228b22&#34;&gt;//设定我们要定位到的坐标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    cor.X = x;
    cor.Y = y;
    &lt;span style=&#34;color:#228b22&#34;&gt;//GetStdHandle函数获取一个指向特定标准设备的句柄，包括标准输入，标准输出和标准错误。
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;//STD_OUTPUT_HANDLE正是代表标准输出（也就是显示屏）的宏
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    hout = GetStdHandle(STD_OUTPUT_HANDLE);
    &lt;span style=&#34;color:#228b22&#34;&gt;//SetConsoleCursorPosition函数用于设置控制台光标的位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    SetConsoleCursorPosition(hout, cor);
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt;
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; name[&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; sex;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; age;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; id;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; subjects[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sum;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; avg;
} student;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; sub_name[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;][&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;];
student stu_dat[&lt;span style=&#34;color:#b452cd&#34;&gt;10000&lt;/span&gt;];
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; dat_count;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sub_count;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Login&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*c1,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*c2)
{
    FILE*fp;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p1;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p3;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p2;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp;
    fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;code.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
    p1=c1;
    p3=c2;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strlen(c1)&amp;gt;strlen(c2))
    {
        p2=p1;
        p1=p3;
        p3=p2;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (; *p3!=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;; )
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p1==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;)
        {
            p1=c1;
        }
        tmp=fgetc(fp);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(((*p1)^(*p3))!=tmp)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        }
        p1++;
        p3++;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strlen(c1)&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;||strlen(c2)&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
    fclose(fp);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;savePwd&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*c1,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*c2)
{
    FILE*fp;
    fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;code.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p1=c1;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p2=c2;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p3;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strlen(c1)&amp;gt;strlen(c2))
    {
        p3=p1;
        p1=p2;
        p2=p3;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (; *p2!=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;; )
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p1==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;)
        {
            p1=c1;
        }
        fputc((*p1)^(*p2),fp);
        p1++;
        p2++;
    }
    fclose(fp);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;dat_add&lt;/span&gt;(student*s1)
{
    FILE*fp;
    s1-&amp;gt;sum=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;sub_count; i++)
    {
        s1-&amp;gt;sum+=s1-&amp;gt;subjects[i];
    }
    s1-&amp;gt;avg=s1-&amp;gt;sum/=sub_count;
    fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;main.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;ab&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(fp==&lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;)
    {
        fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;main.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;);
    }
    fwrite(s1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,fp);
    fclose(fp);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sub_load&lt;/span&gt;()
{
    FILE*fp;
    fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;subjects.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
    sub_count=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;; i++)
    {
        fgets(sub_name[i],&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(sub_name),fp);
        sub_name[i][strlen(sub_name[i])-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strlen(sub_name[i])&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
        {
            sub_count++;
        }
    }
    fclose(fp);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sub_print&lt;/span&gt;()
{
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;学号&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;姓名&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;性别&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;年龄&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strlen(sub_name[i])==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,sub_name[i]);
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;总分&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;平均分&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;排名&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;dat_load&lt;/span&gt;()
{
    FILE*fp;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i;
    fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;main.dat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(fp==&lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;)
    {
        puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;main.dat is lost!&amp;#34;&lt;/span&gt;);
        exit(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; !feof(fp) ; i++)
    {
        fread(&amp;amp;stu_dat[i],&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,fp);
    }
    fclose(fp);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;dat_show&lt;/span&gt; (student s)
{
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%c&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,s.id,s.name,s.sex,s.age);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;sub_count; i++)
    {
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,s.subjects[i]);
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,s.sum,s.avg);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showMiniWindow&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*title,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; X,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; Y,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; height,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; width)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;width; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;height; i2++)
        {
            gotoxy(X+i,Y+i2);
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);
        }
    }
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;);
    gotoxy(X,Y);
    putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;);
    gotoxy(X+width-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y);
    putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;);
    gotoxy(X,Y+height-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;);
    gotoxy(X+width-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+height-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;);
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;; i&amp;lt;width; i++)
    {
        gotoxy(X+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y);
        putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;);
        gotoxy(X+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+height-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
        putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;);
    }
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;; i&amp;lt;height; i++)
    {
        gotoxy(X,Y+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
        putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;);
        gotoxy(X+width-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
        putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;);
        PrintChar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;|&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,X+width-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    }
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;12&lt;/span&gt;);
    gotoxy(X+width/&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;-strlen(title)/&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,Y);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,title);
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;16&lt;/span&gt;);
    gotoxy(X+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;miniLogin&lt;/span&gt; ()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; c1[&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;],c2[&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; ch_tmp;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p=c2;
    FILE*fp;
    showMiniWindow(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;login&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;32&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;User     ________________&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;password ________________&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;);
    fgets(c1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(c1),stdin);
    c1[strlen(c1)-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
    {
        ch_tmp=getch();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(ch_tmp==&lt;span style=&#34;color:#b452cd&#34;&gt;13&lt;/span&gt;)
        {
            *p=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(ch_tmp==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;)
        {
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;consoletest.exe&amp;gt;scaned.txt&amp;#34;&lt;/span&gt;);
            fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;scaned.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
            fgets(c2,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(c2),fp);
            fclose(fp);
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;del scaned.txt&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            *p=ch_tmp;
            p++;
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(Login(c1,c2))
    {
        miniMessage(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;登录成功，欢迎您的使用！&amp;#34;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
    {
        miniMessage(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;用户名或密码错误！&amp;#34;&lt;/span&gt;);
        Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;1000&lt;/span&gt;);
        showExitPic();
        exit(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    }
    Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;1000&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;miniMessage&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*msg)
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n=strlen(msg);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; width=(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;)sqrt(n)+&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; height=n/(width-&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;)+&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; X=&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; Y=&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;;
    showMiniWindow(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Message&amp;#34;&lt;/span&gt;,X,Y,height,width);
    X++;
    Y++;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;n; i++)
    {
        putchar(msg[i]);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(i%(width-&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
        {
            Y++;
            gotoxy(X,Y);
        }
    }
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showMenu&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; txt[][&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;],&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; selected,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; X,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; Y)
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; maxwidth=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_width;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp_press;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;n; i++)
    {
        tmp_width=strlen(txt[i]);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_width&amp;gt;maxwidth)
        {
            maxwidth=tmp_width;
        }
    }
    showMiniWindow(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;MENU&amp;#34;&lt;/span&gt;,X,Y,n+&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,maxwidth+&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;n; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(i==selected)
        {
            color(&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;);
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            color(&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;);
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; txt[i][i2]!=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;; i2++)
        {
            gotoxy(X+i2+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,Y+i+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
            putchar(txt[i][i2]);
        }
    }
    color(&lt;span style=&#34;color:#b452cd&#34;&gt;16&lt;/span&gt;);
    tmp_press=getch();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_press==&lt;span style=&#34;color:#b452cd&#34;&gt;13&lt;/span&gt;)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; selected;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_press==&lt;span style=&#34;color:#b452cd&#34;&gt;72&lt;/span&gt;)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(selected&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
        {
            selected--;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\a&amp;#39;&lt;/span&gt;);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_press==&lt;span style=&#34;color:#b452cd&#34;&gt;80&lt;/span&gt;)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(selected&amp;lt;n-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
        {
            selected++;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;\a&amp;#39;&lt;/span&gt;);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp_press-&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;gt;=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;tmp_press-&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;lt;n)
    {
        selected=tmp_press-&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; showMenu(txt,n,selected,X,Y);
}
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;void picLoad(char*path)
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HMODULE hKernel32 = GetModuleHandle(&amp;#34;kernel32&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    GetConsoleWindow= (PROCGETCONSOLEWINDOW)GetProcAddress(hKernel32,&amp;#34;GetConsoleWindow&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HWND cmd=GetConsoleWindow();
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HDC dc = GetDC(cmd);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HBITMAP hBitmap;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    hBitmap=(HBITMAP)LoadImage            (NULL,path,IMAGE_BITMAP,0,0,LR_LOADFROMFILE|LR_CREATEDIBSECTION);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HDC cmdmem = CreateCompatibleDC(dc);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    SelectObject(cmdmem, hBitmap);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    BitBlt(dc, 0, 0, 1300, 700, cmdmem, 0, 0, SRCCOPY);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    Sleep(3000);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    return ;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;}*/&lt;/span&gt;
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;void loadBlack()
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HMODULE hKernel32 = GetModuleHandle(&amp;#34;kernel32&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    GetConsoleWindow= (PROCGETCONSOLEWINDOW)GetProcAddress(hKernel32,&amp;#34;GetConsoleWindow&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HWND cmd=GetConsoleWindow();
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HDC dc = GetDC(cmd);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HBITMAP hBitmap;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    hBitmap=(HBITMAP)LoadImage            (NULL,&amp;#34;black.bmp&amp;#34;,IMAGE_BITMAP,0,0,LR_LOADFROMFILE|LR_CREATEDIBSECTION);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    HDC cmdmem = CreateCompatibleDC(dc);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    SelectObject(cmdmem, hBitmap);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    BitBlt(dc, 0, 0, 1300, 700, cmdmem, 0, 0, SRCCOPY);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;    return ;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showExitPic&lt;/span&gt;()
{
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;image goodbye.bmp 0 0&amp;#34;&lt;/span&gt;);
    Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;3000&lt;/span&gt;);
    &lt;span style=&#34;color:#228b22&#34;&gt;//picLoad(&amp;#34;goodbye.bmp&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;add_stu&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp_sex[&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;];
    student tmp;
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the id number of the new student.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp.id);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the name of the student.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,tmp.name);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the sex of the student.(F for Female,M for Male.)&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,tmp_sex);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strcmp(tmp_sex,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
    {
        tmp.sex=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
    {
        tmp.sex=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;;
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the age of the student.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp.age);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;sub_count; i++)
    {
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input %s&amp;#39;s %s score.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,tmp.name,sub_name[i]);
        scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp.subjects[i]);
    }
    dat_add(&amp;amp;tmp);
    dat_count=dat_load();
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Data added successfully!&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;3000&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;showalldata&lt;/span&gt;()
{
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    sub_print();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;dat_count; i++)
    {
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%c&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].id,stu_dat[i].name,stu_dat[i].sex,stu_dat[i].age);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;sub_count; i2++)
        {
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].subjects[i2]);
        }
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].sum,stu_dat[i].avg,i+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    }
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;ed_password&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; us_name[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; us_pwd[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; us_pwd2[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; us_pwd3[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;*p;
    FILE*fp;
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    showMiniWindow(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;修改密码&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;36&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;UserName&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;PassWord&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;NewPassWord&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;11&lt;/span&gt;);
    puts(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Again&amp;#34;&lt;/span&gt;);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;8&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,us_name);
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;);
    p=us_pwd;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
    {
        *p=getch();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#b452cd&#34;&gt;13&lt;/span&gt;)
        {
            p--;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;)
        {
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;consoletest.exe&amp;gt;scaned.txt&amp;#34;&lt;/span&gt;);
            fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;scaned.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
            fgets(us_pwd,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(us_pwd),fp);
            fclose(fp);
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;del scaned.txt&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;);
            p++;
        }
    }
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;);
    p=us_pwd2;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
    {
        *p=getch();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#b452cd&#34;&gt;13&lt;/span&gt;)
        {
            p--;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;)
        {
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;consoletest.exe&amp;gt;scaned.txt&amp;#34;&lt;/span&gt;);
            fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;scaned.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
            fgets(us_pwd2,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(us_pwd2),fp);
            fclose(fp);
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;del scaned.txt&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;);
            p++;
        }
    }
    gotoxy(&lt;span style=&#34;color:#b452cd&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;11&lt;/span&gt;);
    p=us_pwd3;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
    {
        *p=getch();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#b452cd&#34;&gt;13&lt;/span&gt;)
        {
            p--;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(*p==&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;)
        {
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;consoletest.exe&amp;gt;scaned.txt&amp;#34;&lt;/span&gt;);
            fp=fopen(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;scaned.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);
            fgets(us_pwd3,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(us_pwd3),fp);
            fclose(fp);
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;del scaned.txt&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            putchar(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;);
            p++;
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(Login(us_name,us_pwd)&amp;amp;&amp;amp;strcmp(us_pwd2,us_pwd3)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
    {
        savePwd(us_name,us_pwd2);
        miniMessage(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Password modification success&amp;#34;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
    {
        miniMessage(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Password modification failed,please check you input.&amp;#34;&lt;/span&gt;);
    }
    Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;3000&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;del_dat&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_number;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; str_cmd[&lt;span style=&#34;color:#b452cd&#34;&gt;255&lt;/span&gt;];
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the id of the data.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;System will delete the first data founded.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp_number);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;dat_count; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(stu_dat[i].id==tmp_number)
        {
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Data founded.Are you sure to delete it?(Y/N)&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
            scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,str_cmd);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strcmp(str_cmd,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;)!=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;strcmp(str_cmd,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;)!=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
            {
                printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Command canceled.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
                system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
            }
            stu_dat[i]=stu_dat[dat_count-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;];
            dat_count--;
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;del main.dat&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;dat_count; i2++)
            {
                dat_add(&amp;amp;stu_dat[i]);
            }
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Del successfully!&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
            system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
        }
    }
    miniMessage(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Cannot found target data!&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sub_ana&lt;/span&gt;()
{
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_sum[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_avg[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_level[&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;][&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;];
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;; i++)
    {
        tmp_sum[i]=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        tmp_avg[i]=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;; i2++)
        {
            tmp_level[i][i2]=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;dat_count; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;sub_count; i2++)
        {
            tmp_sum[i2]+=stu_dat[i].subjects[i2];
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(stu_dat[i].subjects[i2]/&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;)
            {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;:
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;:
                tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;]++;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;8&lt;/span&gt;:
                tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]++;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;:
                tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;]++;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;:
                tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]++;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;default&lt;/span&gt;:
                tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;]++;
            }
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;sub_count; i++)
    {
        tmp_avg[i]=tmp_sum[i]/dat_count;
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;科目&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;总分&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;平均分&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;优秀&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;良好&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;中等&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;及格&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;不及格&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;sub_count; i++)
    {
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,sub_name[i],tmp_sum[i],tmp_avg[i]
               ,tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;],tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;],tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;],tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]
               ,tmp_level[i][&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;]);
    }
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;cmpbysum1&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p2)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; ((student*)p1)-&amp;gt;sum-((student*)p2)-&amp;gt;sum;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;cmpbysum2&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p2)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; ((student*)p2)-&amp;gt;sum-((student*)p1)-&amp;gt;sum;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sortbysum&lt;/span&gt;()
{
    &lt;span style=&#34;color:#228b22&#34;&gt;//ascending sort升序排序
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;//descending sort降序排序
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; mnu[][&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;]= {&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Ascending sort↑&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Descending sort↓&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Cancel&amp;#34;&lt;/span&gt;};
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m_resu;
    m_resu=showMenu(mnu,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(m_resu)
    {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;:
        qsort(stu_dat,dat_count,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),cmpbysum1);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
        qsort(stu_dat,dat_count,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),cmpbysum2);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;default&lt;/span&gt;:
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Command canceled.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
        system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;OK.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
    showalldata();
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;cmpbyid1&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p2)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; ((student*)p1)-&amp;gt;id-((student*)p2)-&amp;gt;id;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;cmpbyid2&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p2)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; ((student*)p2)-&amp;gt;id-((student*)p1)-&amp;gt;id;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sortbyid&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; mnu[][&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;]= {&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Ascending sort↑&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Descending sort↓&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Cancel&amp;#34;&lt;/span&gt;};
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m_resu;
    m_resu=showMenu(mnu,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(m_resu)
    {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;:
        qsort(stu_dat,dat_count,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),cmpbyid1);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
        qsort(stu_dat,dat_count,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),cmpbyid2);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;default&lt;/span&gt;:
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Command canceled.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
        system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt;;
    }
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;OK.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
    showalldata();
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;cmpbyname&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p1,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; *p2)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; strcmp(((student*)p1)-&amp;gt;name,((student*)p2)-&amp;gt;name);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;sortbyname&lt;/span&gt;()
{
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    qsort(stu_dat,dat_count,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(student),cmpbyname);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;OK.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
    showalldata();
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;searchbyid&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp_id;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; founded=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the id of the student.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp_id);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    sub_print();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;dat_count; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(stu_dat[i].id==tmp_id)
        {
            founded++;
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%c&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].id,stu_dat[i].name,stu_dat[i].sex,stu_dat[i].age);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;sub_count; i2++)
            {
                printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].subjects[i2]);
            }
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].sum,stu_dat[i].avg,founded);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(founded==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
    {
        system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Not founded!&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    }
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;searchbyname&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp_name[&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; founded=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Please input the name of the student.&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,tmp_name);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    sub_print();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;dat_count; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(strcmp(stu_dat[i].name,tmp_name)==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
        {
            founded++;
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%c&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].id,stu_dat[i].name,stu_dat[i].sex,stu_dat[i].age);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i2&amp;lt;sub_count; i2++)
            {
                printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].subjects[i2]);
            }
            printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,stu_dat[i].sum,stu_dat[i].avg,founded);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(founded==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;)
    {
        system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
        printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Not founded!&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
    }
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    atexit(showExitPic);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m_resu;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; mnu[][&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;]= {&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Modify the password&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Add new data&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Show all data&amp;#34;&lt;/span&gt;,
                     &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Del data by id&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Subject analysis&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Sort data by sum&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Sort data by id&amp;#34;&lt;/span&gt;
                     ,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Sort in dictionary order by name&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Search by id&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Search by name&amp;#34;&lt;/span&gt;
                     ,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;about&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;exit&amp;#34;&lt;/span&gt;
                    };
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;title 学生成绩管理系统V6.0&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;mode con cols=100 lines=30&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#228b22&#34;&gt;//picLoad(&amp;#34;background.bmp&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;//loadBlack();
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;image background.bmp 0 0&amp;#34;&lt;/span&gt;);
    Sleep(&lt;span style=&#34;color:#b452cd&#34;&gt;3000&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;image /d&amp;#34;&lt;/span&gt;);
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    miniLogin();
    system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);
    sub_load();
    dat_count=dat_load();
beg:
    m_resu=showMenu(mnu,&lt;span style=&#34;color:#b452cd&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;switch&lt;/span&gt;(m_resu)
    {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;:
        ed_password();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:
        add_stu();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;:
        showalldata();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;:
        del_dat();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;:
        sub_ana();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;:
        sortbysum();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;:
        sortbyid();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;7&lt;/span&gt;:
        sortbyname();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;8&lt;/span&gt;:
        searchbyid();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;:
        searchbyname();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;:
        system(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;write about.rtf&amp;#34;&lt;/span&gt;);
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;11&lt;/span&gt;:
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;goto&lt;/span&gt; end;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;goto&lt;/span&gt; beg;
end:
    ;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://ntutn.top/posts/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>连续正整数</title>
        <link>https://ntutn.top/posts/%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B4%E6%95%B0/</link>
        <pubDate>Sat, 06 Apr 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B4%E6%95%B0/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B4%E6%95%B0/ -&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;还是数据结构的网上作业，将一个整数分解为连续正整数之和，找对方向倒是也不算难……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有些正整数可以表示为 n (n&amp;gt;1) 个连续正整数的和，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;15=1+2+3+4+5
    =4+5+6
    =7+8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给定一个正整数 N，判断其是否可以表示为一组连续正整数的和，输出符合条件的解的组数。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;input&#34;&gt;Input&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;输入有一行，包含一个正整数 n (3≤n≤1000000000)。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;output&#34;&gt;Output&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;输出有一行，正整数n的符合条件的解的组数。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Input&lt;/th&gt;
&lt;th&gt;Output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;单点时限: 2.0 sec&lt;/strong&gt;
&lt;strong&gt;内存限制: 256 MB&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n;
    cin&amp;gt;&amp;gt;n;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; counter=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;; i&amp;lt;(&lt;span style=&#34;color:#b452cd&#34;&gt;100000&lt;/span&gt;&amp;lt;n?&lt;span style=&#34;color:#b452cd&#34;&gt;100000&lt;/span&gt;:n); i++) &lt;span style=&#34;color:#228b22&#34;&gt;//n/i-i/2+1&amp;gt;=1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(n/i-i/&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;-i%&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;&amp;gt;=&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;&amp;amp;&amp;amp;(n/i-i/&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;-i%&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;+n/i-i/&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;-i%&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;+i-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)*i==n*&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;)
        {
            counter++;
        }
        &lt;span style=&#34;color:#228b22&#34;&gt;//cout&amp;lt;&amp;lt;&amp;#34;test-&amp;#34;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    }
    cout &amp;lt;&amp;lt; counter &amp;lt;&amp;lt; endl;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;枚举就好了。需要根据分成的整数的个数i讨论，但为了显得更牛X我就写到一起了，上面的&lt;code&gt;n/i-i/2-i%2+1&lt;/code&gt;无论在奇偶情况下都是拆分得到的整数的第一个&lt;em&gt;理应&lt;/em&gt;是多少。&lt;/p&gt;
&lt;p&gt;判断的主要逻辑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个数字大于等于1&lt;/li&gt;
&lt;li&gt;所有数之和等于原数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求和在这里就不必用循环了，用等差数列明显更高效。注意这里计算时为了防止整数除法运算截断的问题，将除法移动到了等式的右边。&lt;/p&gt;
- https://ntutn.top/posts/%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B4%E6%95%B0/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>使用映像劫持技术屏蔽电脑中的广告进程</title>
        <link>https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E6%98%A0%E5%83%8F%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%B1%8F%E8%94%BD%E7%94%B5%E8%84%91%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%91%8A%E8%BF%9B%E7%A8%8B/</link>
        <pubDate>Thu, 28 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E6%98%A0%E5%83%8F%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%B1%8F%E8%94%BD%E7%94%B5%E8%84%91%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%91%8A%E8%BF%9B%E7%A8%8B/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E6%98%A0%E5%83%8F%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%B1%8F%E8%94%BD%E7%94%B5%E8%84%91%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%91%8A%E8%BF%9B%E7%A8%8B/ -&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;映像劫持（Image File Execution Options），简单的说法，就是当你打开的是程序A，而运行的确是程序B。映像劫持其实是Windows内设的用来调试程序的功能，但是现在却往往被病毒恶意利用。当用户双击对应的程序后，操作系统就会给外壳程序（例如“explorer.exe”）发布相应的指令，其中包含有执行程序的路径和文件名，然后由外壳程序来执行该程序。事实上在该过程中，Windows还会在注册表的上述路径中查询所有的映像劫持子键，如果存在和该程序名称完全相同的子键，就查询对应子健中包含的“dubugger”键值名，并用其指定的程序路径来代替原始的程序，之后执行的是遭到“劫持”的虚假程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;国内很多软件都有重度广告，“资讯”、“新闻”、“弹窗”，不胜其烦。直接找到广告进程删除掉，结果一自动更新，又回来了。&lt;/p&gt;
&lt;p&gt;于是，我想到了“映像劫持”：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#658b00&#34;&gt;Windows Registry Editor Version 5.00&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SLBService.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\TsService.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\FoxitDesktopAd.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\FoxitProtect.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LCServer.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LRServer.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\2345MiniPage.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SohuNews.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\PinyinUp.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SGDownload.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SGMedalLoader.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SogouCloud.exe]&lt;/span&gt;
&lt;span style=&#34;color:#658b00&#34;&gt;&amp;#34;Debugger&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;winlogon&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存为&lt;code&gt;.reg&lt;/code&gt;文件，导入注册表即可。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
- https://ntutn.top/posts/%E4%BD%BF%E7%94%A8%E6%98%A0%E5%83%8F%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%B1%8F%E8%94%BD%E7%94%B5%E8%84%91%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%91%8A%E8%BF%9B%E7%A8%8B/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>数据结构与算法 C&#43;&#43;编程能力评估</title>
        <link>https://ntutn.top/posts/c&#43;&#43;%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E8%AF%84%E4%BC%B0/</link>
        <pubDate>Thu, 28 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/c&#43;&#43;%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E8%AF%84%E4%BC%B0/</guid>
        <description>归零幻想 https://ntutn.top/posts/c&#43;&#43;%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E8%AF%84%E4%BC%B0/ -&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;题目1&#34;&gt;题目1&lt;/h2&gt;
&lt;p&gt;向类SeqList中插入数据，请根据main函数中的调用，完成Insert和output函数。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    5
    1 2 3 4 5
    2 9
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1 2 3 4 5
1 2 9 3 4 5
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Answer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;SeqList&lt;/span&gt;
{
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; * data;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; last; &lt;span style=&#34;color:#228b22&#34;&gt;// index of the last element
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    SeqList ( &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sz );
    ~SeqList ( )
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt; [ ] data;
    }
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;input&lt;/span&gt; ();
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;output&lt;/span&gt;() ;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Insert&lt;/span&gt;   ( &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i);
}  ;
SeqList::SeqList ( &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sz )
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; ( sz &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt; )
    {
        data = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[sz];
        last = -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
    }
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; SeqList:: input()
{
    cin &amp;gt;&amp;gt;last;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;last; i++)
        cin&amp;gt;&amp;gt;data [i];
    last--;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; SeqList::output()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; fi=&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i&amp;lt;=last; i++)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(!fi)
        {
            fi=!fi;
            cout&amp;lt;&amp;lt;data[i];
        }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;data[i];
        }
    }
    cout&amp;lt;&amp;lt;endl;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; SeqList::Insert(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i1=last;i1&amp;gt;=i;i1--){
        data[i1+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;]=data[i1];
    }
    data[i]=x;
    last++;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    SeqList myList(&lt;span style=&#34;color:#b452cd&#34;&gt;50&lt;/span&gt;);
    myList.input();
    myList.output();
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; where,value;
    cin &amp;gt;&amp;gt;where;
    cin &amp;gt;&amp;gt;value;
    myList.Insert(value,where);
    myList.output ();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;题目2&#34;&gt;题目2&lt;/h2&gt;
&lt;p&gt;已知一块靶场大小为m*n（m行n列），每个点上都有一面旗子，我们的炮兵发射炮弹，炮弹一次只能炸掉一面旗子，每次炮弹的落点坐标都有记录，问你几炮过后，靶场还剩下几面旗子呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有若干行，第一行为两个整数m,n，以空格分隔，都是整数，且1&amp;lt;=m&amp;lt;=n&amp;lt;=100；&lt;/p&gt;
&lt;p&gt;接下来有若干行，每行有两个整数x,y，代表炮弹落点的坐标（行、列坐标，编号从0开始）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3 3
1 1
1 1
99 99
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个整数，代表最后靶场上剩余的旗子数。&lt;/p&gt;
&lt;p&gt;提示：炮弹可能打在同一个位置，也可能脱靶，但保证在100*100的范围内。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;8
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Answer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#define N 105
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; data[N][N];
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i&amp;lt;N;i++){
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i2&amp;lt;N;i2++){
            data[i][i2]=&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;;
        }
    }
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m,n;
    cin&amp;gt;&amp;gt;m&amp;gt;&amp;gt;n;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; res=m*n;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; x,y;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(cin&amp;gt;&amp;gt;x&amp;gt;&amp;gt;y){
        data[x][y]=&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i&amp;lt;m;i++){
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i2&amp;lt;n;i2++){
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(data[i][i2]){
                res--;
            }
        }
    }
    cout&amp;lt;&amp;lt;res&amp;lt;&amp;lt;endl;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;题目3&#34;&gt;题目3&lt;/h2&gt;
&lt;p&gt;买房面积不要求太大，环境不要求太好，只要单价够便宜就已经很满足啦~现在挑选了一些房源，请你帮忙选一选，哪个最适合呢？小本本上记录了房子的名称（字母和数字组成，无空格）、面积和总价，你来帮编个程序自动计算一下吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一行为一个整数N(1&amp;lt;=N&amp;lt;=100)，表示接下来有N套房源信息；&lt;/p&gt;
&lt;p&gt;接下来有N行，每行包括房源名称(不超过100个字符)、面积和总价（double类型，小数点后保留两位），以空格分隔。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3
Tangdaowan0101 50 50
Jiangshan1314 49 50
Jinshatan1111 51 50
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Jinshatan1111 51.00 50.00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仅一行，为最适合的房源信息，以空格分隔，末尾换行。&lt;/p&gt;
&lt;p&gt;测试用例保证没有单价重复的情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Answer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;limits.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt;
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; name[&lt;span style=&#34;color:#b452cd&#34;&gt;101&lt;/span&gt;];
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;double&lt;/span&gt; area;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;double&lt;/span&gt; sum;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;double&lt;/span&gt; avg;
} House;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Gethouse&lt;/span&gt;(House*h,&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n){
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;double&lt;/span&gt; res=INT_MAX;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; res_num=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i&amp;lt;n;i++){
        h[i].avg=h[i].sum/h[i].area;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(h[i].avg&amp;lt;res){
            res=h[i].avg;
            res_num=i;
       }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; res_num;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n,i,flag = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#228b22&#34;&gt;//n有几行
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);
    House h[n];
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i ++)
      scanf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s%lf%lf&amp;#34;&lt;/span&gt;,h[i].name,&amp;amp;h[i].area,&amp;amp;h[i].sum);
    flag= Gethouse(h,n);
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;%s %.2f %.2f&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;,h[flag].name, h[flag].area, h[flag].sum);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;题目4&#34;&gt;题目4&lt;/h2&gt;
&lt;p&gt;实现链表的输入（已实现）、输出和删除成员函数。&lt;/p&gt;
&lt;p&gt;输入时，根据endtag确定是否结束输入；&lt;/p&gt;
&lt;p&gt;删除时，根据下标（从0开始）。&lt;/p&gt;
&lt;p&gt;注意，输入的顺序跟存放的顺序以及输出的顺序是相反的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1 2 3 4 5 0
2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Output&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;5 4 3 2 1
5 4 2 1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Answer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;stdlib.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;#34;iostream&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std ;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;List&lt;/span&gt;; &lt;span style=&#34;color:#228b22&#34;&gt;//前视定义,否则友元无法定义
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;LinkNode&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;friend&lt;/span&gt;  List; &lt;span style=&#34;color:#228b22&#34;&gt;//链表结点类的定义
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    LinkNode *link;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; data;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    LinkNode(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &amp;amp; item, LinkNode *ptr = &lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;)
    {
        data=item;
        link=ptr;
    }
    LinkNode (LinkNode *ptr = &lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;)
    {
        link=ptr;
    }
    ~LinkNode() {};
};
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;List&lt;/span&gt;
{
    &lt;span style=&#34;color:#228b22&#34;&gt;//单链表类的定义
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:
    LinkNode *first; &lt;span style=&#34;color:#228b22&#34;&gt;//指向首结点的指针
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
    List ()
    {
        first = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; LinkNode ();   &lt;span style=&#34;color:#228b22&#34;&gt;// 带头结点
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    }
    ~List ()
    {
        MakeEmpty();   &lt;span style=&#34;color:#228b22&#34;&gt;//析构函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;MakeEmpty&lt;/span&gt; ( );      &lt;span style=&#34;color:#228b22&#34;&gt;//链表置空
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Remove&lt;/span&gt; ( &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i );
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;input&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;  endTag);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;output&lt;/span&gt;();
};
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; List:: MakeEmpty ( )
{
    LinkNode *q;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (  first-&amp;gt;link != &lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt; )
    {
        q = first-&amp;gt;link;
        first-&amp;gt;link = q-&amp;gt;link;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt; q;
    }
};
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; List :: input (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; endTag)
{
    LinkNode  *newnode;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; val;
    cin&amp;gt;&amp;gt;val;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(val!=endTag)
    {
        newnode=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; LinkNode (val);
        newnode-&amp;gt;link=first-&amp;gt;link;
        first-&amp;gt;link=newnode;
        cin&amp;gt;&amp;gt;val;
    }
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; List::Remove(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i)
{
    LinkNode*tmp=first;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i2=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i2&amp;lt;i;i2++){
        tmp=tmp-&amp;gt;link;
    }
    LinkNode*tmp1=tmp-&amp;gt;link;
    tmp-&amp;gt;link=tmp-&amp;gt;link-&amp;gt;link;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt;(tmp1);
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; List::output()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; fi=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    LinkNode*tmp=first-&amp;gt;link;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(tmp!=&lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(fi++)
        {
            cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;tmp-&amp;gt;data;
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        {
            cout&amp;lt;&amp;lt;tmp-&amp;gt;data;
        }
        tmp=tmp-&amp;gt;link;
    }
    cout&amp;lt;&amp;lt;endl;
}
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    List l;
    l.input(&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;); &lt;span style=&#34;color:#228b22&#34;&gt;//0为输入的结束数字
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    l.output ();
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; index;
    cin&amp;gt;&amp;gt;index; &lt;span style=&#34;color:#228b22&#34;&gt;//要删除的元素的下标，下标从0 开始
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    l.Remove(index);
    l.output (); &lt;span style=&#34;color:#228b22&#34;&gt;//删除后输出
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://ntutn.top/posts/c&#43;&#43;%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E8%AF%84%E4%BC%B0/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>直</title>
        <link>https://ntutn.top/posts/%E7%9B%B4/</link>
        <pubDate>Wed, 27 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E7%9B%B4/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E7%9B%B4/ -&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;直&#34;&gt;直&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;发现了自己初中写的作文，我当年这么中二的吗……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;树是直的，直得挺拔入云；山是直的，直得直插霄汉；竹是直的直得虚心髙洁。是啊，巍峨的直无处不在。&lt;/p&gt;
&lt;h2 id=&#34;尺&#34;&gt;尺&lt;/h2&gt;
&lt;p&gt;人们仰慕大自然的直，于是制造了尺。尺，为直而生。再纷乱的外界环境，它总恪尽职守，一丝不苟。即使是它的制造者，它也将毫不留情地指出他的过失。&lt;/p&gt;
&lt;p&gt;人本如此。看到它，我想起了屈子，想起了岳将军，想起包拯，想起了正直的中国人。&lt;/p&gt;
&lt;h2 id=&#34;弓&#34;&gt;弓&lt;/h2&gt;
&lt;p&gt;尺是直的，但在不可抗力下它还是弯曲了。有时弯也是一种无奈，正直的树也抵不住弯曲的斧。那就弯吧。不！你没看到，弦是直的。弦如何直？那是弓在抗拒那股不可抗力！是啊，弓是弯的，但它的心是直的。它仍是一心向直的。&lt;/p&gt;
&lt;p&gt;人应如此。狂风袭来，竹顺势而弯，但风速减小了。虽然只有一点。看到它，我想到了周树人，想到了郭沫若，想到了在黑暗中抗争的中国人。&lt;/p&gt;
&lt;h2 id=&#34;箭&#34;&gt;箭&lt;/h2&gt;
&lt;p&gt;弓是弯的，但它不甘继续弯下去。于是它化作一支羽箭，反射着金色阳光，即使这直是有代价的。它是一根选择燃烧的火柴。它将烧尽，但它选择了燃烧。&lt;/p&gt;
&lt;p&gt;看到它，我想到了荆轲，想到了谭嗣同，想到了敢于与黑暗抗争的中国人。&lt;/p&gt;
&lt;p&gt;中华民族是一个直的民族，中国人本色如此。中国人是直的，即使在不可抗力下弯了，心还是直的。而且，他们会抗争，不管那是不是不可抗力。在忍无可忍时，他们会用自己的生命，划出一道直线。中国，拉着这样的弓，射出这样的箭，复兴也是必然的。&lt;/p&gt;
&lt;p&gt;这就是那个直的传说。&lt;/p&gt;
- https://ntutn.top/posts/%E7%9B%B4/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>堆栈ADT实现及应用</title>
        <link>https://ntutn.top/posts/%E5%A0%86%E6%A0%88adt%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/</link>
        <pubDate>Tue, 26 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E5%A0%86%E6%A0%88adt%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E5%A0%86%E6%A0%88adt%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/ -&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;假设栈ADT的数据元素为整数，栈ADT的实现采用顺序存储结构。现要用栈来辅助完成任意非负十进制整数到Base(Base不大于35)进制的转换。部分代码已经给出，请补充完善栈溢出处理函数和主函数。  注意：只提交需要补充的函数，其他代码不允许自己重写和修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;栈溢出处理函数&lt;code&gt;overflowProcess&lt;/code&gt;：当栈满时，将栈的空间在原来基础上扩大1倍。&lt;/p&gt;
&lt;p&gt;主函数： 输入一个非负十进制整数n及要转换的进制&lt;code&gt;Base&lt;/code&gt;，输出其转换后的进制形式，以及长度。输出格式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;($...$)10=(#...#)Base 
Length=转换进制后数的位数
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中&lt;code&gt;$...$&lt;/code&gt;是输入的十进制数n，&lt;code&gt;#...#&lt;/code&gt;是转换得到的&lt;code&gt;Base&lt;/code&gt;进制数，如果转换后位码多于1位，则用大写字母A,B,&amp;hellip;等表示，&lt;code&gt;10-A&lt;/code&gt;, &lt;code&gt;11-B&lt;/code&gt;,&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;例如，输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1024 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(1024)10=(10000000000)2
Length=11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再如，输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;25 30
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(25)10=(P)30
Length=1
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;预置代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; std;
&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typedef&lt;/span&gt;  &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;  ElemType;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;SeqStack&lt;/span&gt;  
{  &lt;span style=&#34;color:#228b22&#34;&gt;//顺序栈类定义
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt;:     
        ElemType *elements; &lt;span style=&#34;color:#228b22&#34;&gt;//数组存放栈元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; top;             &lt;span style=&#34;color:#228b22&#34;&gt;//栈顶指示器
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; maxSize;               &lt;span style=&#34;color:#228b22&#34;&gt;//栈最大容量     
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;overflowProcess&lt;/span&gt;(); &lt;span style=&#34;color:#228b22&#34;&gt;//栈的溢出处理
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt;:
         SeqStack(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sz);                    &lt;span style=&#34;color:#228b22&#34;&gt;//构造函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;         ~SeqStack() { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt; []elements; };        &lt;span style=&#34;color:#228b22&#34;&gt;//析构函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;         &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Push&lt;/span&gt;(ElemType x);    &lt;span style=&#34;color:#228b22&#34;&gt;//进栈
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;         &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Pop&lt;/span&gt;(ElemType &amp;amp;x);     &lt;span style=&#34;color:#228b22&#34;&gt;//出栈
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;         &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;IsEmpty&lt;/span&gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; top == -&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;; }
         &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;IsFull&lt;/span&gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; top == maxSize-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;; }
         &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;GetSize&lt;/span&gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;const&lt;/span&gt; {&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; top+&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;}
};
SeqStack::SeqStack(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; sz)
{  elements=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ElemType[sz];  &lt;span style=&#34;color:#228b22&#34;&gt;//申请连续空间
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(elements==&lt;span style=&#34;color:#658b00&#34;&gt;NULL&lt;/span&gt;) {cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;空间申请错误！&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;exit(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);}
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; { top=-&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;       &lt;span style=&#34;color:#228b22&#34;&gt;//栈顶指示器指向栈底
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;               maxSize=sz;     &lt;span style=&#34;color:#228b22&#34;&gt;//栈的最大空间
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;               };
};
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**********************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;  补充overflowProcess() 函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**********************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; SeqStack::Push(ElemType x) 
{   &lt;span style=&#34;color:#228b22&#34;&gt;//若栈满,则溢出处理，将元素x插入该栈栈顶
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (IsFull() == &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;) overflowProcess();   &lt;span style=&#34;color:#228b22&#34;&gt;//栈满
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    elements[++top] = x;       &lt;span style=&#34;color:#228b22&#34;&gt;//栈顶指针先加1, 再元素进栈
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;}; 
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; SeqStack::Pop(ElemType &amp;amp; x) 
{&lt;span style=&#34;color:#228b22&#34;&gt;//若栈不空，函数退出栈顶元素并将栈顶元素的值赋给x,
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#228b22&#34;&gt;//返回true，否则返回false
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (IsEmpty() == &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    x = elements[top--];           &lt;span style=&#34;color:#228b22&#34;&gt;//先取元素，栈顶指针退1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;    &lt;span style=&#34;color:#228b22&#34;&gt;//退栈成功
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;};
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**************************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;  补充mian()函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**************************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;分析和错误&#34;&gt;分析和错误&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OverflowProcess&lt;/code&gt;，用于栈溢出处理，一般申请原长度二倍的存储空间。&lt;/p&gt;
&lt;p&gt;进制转换，10进制转n进制，除n取余法。&lt;/p&gt;
&lt;p&gt;不能通过隐藏样例，认为是有类似0100之类零开头的结果，写代码排除，还是不行。&lt;/p&gt;
&lt;p&gt;多次尝试无法通过，与通过的同学对比，发现是溢出处理写错了，在申请完二倍的空间后没让&lt;code&gt;maxSize&lt;/code&gt;乘二。其实他的也写错了，不过因为他开的初始空间足够大这个函数压根没执行到，而强迫症的我就被卡了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不得不吐槽的一点是题目中竟然让我补充&lt;code&gt;mian&lt;/code&gt;函数……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;answer&#34;&gt;Answer&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**********************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;  补充overflowProcess() 函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**********************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; SeqStack::overflowProcess(){
    ElemType*tmp=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ElemType[maxSize*&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;];
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;i&amp;lt;maxSize;i++){
        tmp[i]=elements[i];
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt;[] elements;
    elements=tmp;
    maxSize*=&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;;
}
&lt;span style=&#34;color:#228b22&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**************************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;  补充mian()函数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;**************************************************************
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;(){
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; n,base;
    SeqStack*stk=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; SeqStack(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;base;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp=n;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(tmp&amp;gt;=base){
        stk-&amp;gt;Push(tmp%base);
        tmp=tmp/base;
    }
    stk-&amp;gt;Push(tmp);
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; counter=&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
    cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;n&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;)10=&amp;#34;&lt;/span&gt;;
    cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt;;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; tmp1;
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; flag=&lt;span style=&#34;color:#658b00&#34;&gt;true&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(stk-&amp;gt;Pop(tmp1)){
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(flag&amp;amp;&amp;amp;tmp1==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;){
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;continue&lt;/span&gt;;
        }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
            flag=&lt;span style=&#34;color:#658b00&#34;&gt;false&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt; tmp2;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(tmp1&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;9&lt;/span&gt;){
            tmp2=tmp1-&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;+&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;
        }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
            tmp2=tmp1+&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;
        }
        cout&amp;lt;&amp;lt;tmp2;
        counter++;
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(counter==&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;){
        cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
        counter++;
    }
    cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;base&amp;lt;&amp;lt;endl;
    cout&amp;lt;&amp;lt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Length=&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;counter&amp;lt;&amp;lt;endl;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt; stk;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://ntutn.top/posts/%E5%A0%86%E6%A0%88adt%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>重装机兵</title>
        <link>https://ntutn.top/posts/%E9%87%8D%E8%A3%85%E6%9C%BA%E5%85%B5/</link>
        <pubDate>Mon, 25 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E9%87%8D%E8%A3%85%E6%9C%BA%E5%85%B5/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E9%87%8D%E8%A3%85%E6%9C%BA%E5%85%B5/ -&lt;p&gt;&lt;img src=&#34;https://images.ntutn.top/2022/04/5f99d24152d225af453f2e8d52f1ac0a.jpg&#34; alt=&#34;重装机兵&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;拉多梦的起点&#34;&gt;拉多：梦的起点&lt;/h2&gt;
&lt;p&gt;主角，一个满脑子都是不切实际的想法的负气出走的小毛孩，开始了他伟大的征途。这里就按照后面作品的称号吧。&lt;/p&gt;
&lt;p&gt;首先回家，箱子里面有5G，聊胜于无吧。去买几个参丸，准备，走。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;找到战车&#34;&gt;找到战车&lt;/h3&gt;
&lt;p&gt;出镇，去东南方向的山洞，需要逃跑的怪物类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仿生蜗牛&lt;/li&gt;
&lt;li&gt;生物炮&lt;/li&gt;
&lt;li&gt;加农炮&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本是一路逃跑到了山洞最深处，喝个参丸，与挡路的狗对话。&lt;/p&gt;
&lt;p&gt;硬抗战狗一发攻击，然后&lt;code&gt;狼&lt;/code&gt;会出现，并帮你打败战狗。&lt;/p&gt;
&lt;p&gt;山洞的战车太破，&lt;code&gt;狼&lt;/code&gt;看不上，只拿走了副炮（徒手拆副炮啊）。于是这就是咱的第一辆战车了。&lt;/p&gt;
&lt;p&gt;将山洞里稍微搜刮一下，也许去找开始打不过的怪物报个仇。相当舒服。&lt;/p&gt;
&lt;p&gt;拉多有个规矩，就是战车不允许开进镇子，虽然没啥影响，但总是很不爽，毕竟好不容易找到战车总是想找人显摆一下啊。貌似这破规矩一直延续到第四部，香泽丽舍也有类似规矩。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BUG：给战车吃个参丸，然后人的HP就变成一个极大的值……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;水怪&#34;&gt;水怪&lt;/h3&gt;
&lt;p&gt;作为赏金猎人，当然只有猎杀赏金首获得赏金才是最有趣的。可惜第一代这些元素不是很多，如果是第四代，任务系统是很重要的。&lt;/p&gt;
&lt;p&gt;水怪不是很强，基本拿到战车后就可以直接开BOSS了。&lt;/p&gt;
&lt;p&gt;首先去加满弹药和装甲，然后先向西走，再向北走，路上会看到一个山洞。进入，顺着箭头走，然后……就掉坑了。第一次玩的玩家基本都被坑过。在掉下来的这层到处走走，遇到水怪的概率很高。基本只用主炮输出就能打过。&lt;/p&gt;
&lt;p&gt;顺着坡爬上去，在另一个方向小心去拿那个箱子，是副炮。由于打水怪消耗不少装甲片，现在基本可以直接装备。副炮是无限弹药的，对于清小怪很有帮助。&lt;/p&gt;
&lt;p&gt;回镇补充一下，准备去下一个镇子。&lt;/p&gt;
&lt;p&gt;关卡，只要开着战车去，就会让你通过。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打赢后记得去情报处领赏金。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;麦基&#34;&gt;麦基&lt;/h2&gt;
&lt;p&gt;第一次玩我就没进入麦基镇，直接错过去了。在你向东走，路过一个小屋的标志，那就是麦基镇了。&lt;/p&gt;
&lt;h3 id=&#34;宝石镜&#34;&gt;宝石镜&lt;/h3&gt;
&lt;p&gt;进入麦基，首先看到一片白薯地，耕会儿地吧，不要每天都打打杀杀的【滑稽】。在耕地过程中会找到一枚戒指，拿到屋里可以换得宝石镜，虽然现在暂时没用，但是是最强人类装备的四个零件之一。&lt;/p&gt;
&lt;h3 id=&#34;传送装置时空隧道&#34;&gt;传送装置（时空隧道）&lt;/h3&gt;
&lt;p&gt;坐传送装置到拉多镇，与门口一直堵门的人对话他就会让开，以后拉多也就可以使用传真了。我个人认为这个设计是为了避免BUG，毕竟这个游戏传真使用有一定概率穿送到生命科学研究所，而在拉多这样肯定是不合理的，于是大概程序员灵机一动……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在梦想起飞版本中的确有这个BUG，可以借此避免探测器球体和气息屏蔽仪被回收&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;生命科学研究所&#34;&gt;生命科学研究所&lt;/h2&gt;
&lt;p&gt;既然前面提到了，就在这里说一说吧。在传真出错时会传送到生命科学研究所，里面一个人都没有，设备都是故障。到自动售货机面前调查一下，可以找到一个再生丸，可以让死人复活，而且使用后这里会再出现一个。实际用处不大，因为完全可以去直接找明奇博士复活。&lt;/p&gt;
&lt;h2 id=&#34;波布&#34;&gt;波布&lt;/h2&gt;
&lt;p&gt;从麦基继续向东，可以到达波布。&lt;/p&gt;
&lt;h3 id=&#34;给学校捐款与bug&#34;&gt;给学校捐款与BUG&lt;/h3&gt;
&lt;p&gt;在波布给学校捐款一定数量后会在镇子中央给主角立个雕像，&lt;em&gt;然而当你捐款数额超过了自己实际拥有的钱数，钱没扣，但雕像立起来了……&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;伙伴以及复制战车bug&#34;&gt;伙伴以及复制战车BUG&lt;/h3&gt;
&lt;p&gt;在波布南边有一个房子，开着战车进去，然后走进屋里。这时屋里跑出来一个熊孩子，开上你的战车就到处乱逛。这熊孩子就是我们诱拐的目标，未来的机械师克里夫。走上前与他对话就可以让他加入了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;他开车开的挺快，可以去树那里堵他
克里夫上自己的战车，于是就有人想，如果自己先一步上车，会怎样？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是就有人进行了实验。结果表明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你先上车，克里夫会停在你面前，对话也得不到什么结果&lt;/li&gt;
&lt;li&gt;如果克里夫先上车，参照前文&lt;/li&gt;
&lt;li&gt;如果同时上车，结果……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两人都上车了，战车变成了两辆！当然这只是一个BUG，如果此时下车，复制的战车也会消失。这时，两辆车用的是同一套数据，这就造成一些判定也就可以被绕过。比如买一发特殊炮弹（铁弹）理应只能发射一枚炮弹的，但却发射两枚，于是就溢出，然后弹仓多了256枚特殊炮弹（没有名字的，价格还特别贵），然后卖掉，基本就不愁钱了。&lt;/p&gt;
&lt;h3 id=&#34;水鬼&#34;&gt;水鬼&lt;/h3&gt;
&lt;p&gt;找到伙伴后，去波布进行一波修整，基本就可以开第二个BOSS了。需要进行的准备有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对武器进行一次升级&lt;/li&gt;
&lt;li&gt;买一个传真&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说实话即使到现在我都感觉这游戏有些翻译很诡异，“传真”是一个传送装置（在第二部翻译叫“犬系统”），“金甲”被打烂会变成“金靴”……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去给伙伴租一辆战车&lt;/li&gt;
&lt;li&gt;补充弹药和装甲片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二个BOSS&lt;code&gt;水鬼&lt;/code&gt;在波布东边的桥上出没，在上面多转转就能遇到。&lt;/p&gt;
&lt;p&gt;没什么要注意的，记得先打&lt;strong&gt;蛙人&lt;/strong&gt;，后打&lt;strong&gt;水鬼&lt;/strong&gt;。你可能在波布见到过有卖特种炮弹“榴弹”，估计本来按照设计应该是用来打蛙人的，但是实际发现好像根本用不到，直接主炮硬刚就行。&lt;/p&gt;
&lt;p&gt;打水鬼时，水鬼在HP比较低时有概率潜入水中恢复HP。这里要看运气了，一般是没问题，但要是你脸黑，也存在炮弹打完还没死的情况。&lt;/p&gt;
&lt;h3 id=&#34;找到战车-1&#34;&gt;找到战车&lt;/h3&gt;
&lt;p&gt;虽然出租战车也挺舒服的，但是价格比较高，长期租很不合算（土豪随意）。出租战车收费是按照你租了多少战车，直接在你打怪得到的报酬中按照比例扣除。所以，在不用的时候，一定要按时归还，因为就算不用也是收钱的。&lt;/p&gt;
&lt;p&gt;准备：因为有人类战，买最好的人类装备，准备好恢复道具等。&lt;/p&gt;
&lt;p&gt;穿过水怪所在的大桥，就到了一家在偷偷排放污水的工厂。这可能与作品主题有点关系吧。有个大叔说不要踩花，虽然想吐槽他自己就站在花上，但这里想表现的大概是人们只注意自己身边的环境整洁，实质上并不注重环保。&lt;/p&gt;
&lt;p&gt;去找社长要战车，社长说要让花儿决定，然后，他拿出来花，“给，不给，给……”。虽然知道花儿都是三瓣的是因为画质问题，但果然还是好像吐槽。&lt;/p&gt;
&lt;h3 id=&#34;巨型炮&#34;&gt;巨型炮&lt;/h3&gt;
&lt;p&gt;拉多的事情到这里基本就结束了，可以准备去下一个镇子了。&lt;/p&gt;
&lt;p&gt;要准备的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹药和装甲片的补充&lt;/li&gt;
&lt;li&gt;购买8枚“铁弹”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;巨型炮算是我们前期遇到的一个比较不好打的敌人了，攻防都很高，尤其你走到他面前基本就没弹药了。&lt;/p&gt;
&lt;p&gt;雷班纳每回合都用铁弹，机械师随意（就是打酱油的）。&lt;/p&gt;
&lt;p&gt;等铁弹用完，基本巨型炮的装备就全坏了，主炮解决掉就好了。&lt;/p&gt;
&lt;p&gt;不过经验倒是超级多，也算是挺合算的了。&lt;/p&gt;
&lt;p&gt;这时基本战车就坏的差不多了，回拉多修修车吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拉多爸爸修车不要钱&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果战车坏的动都动不了，可以去租一辆战车，然后在原战车上调查，“牵引”走。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;奥多&#34;&gt;奥多&lt;/h2&gt;
&lt;h3 id=&#34;女战士英格丽特&#34;&gt;女战士英格丽特&lt;/h3&gt;
&lt;p&gt;在酒吧对话即可。没有太多要注意的，按照对话走就能收进队伍。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的HP太低，对方可能不理你。这大概是后面立即有一场战斗。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;军号&#34;&gt;军号&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非常影响游戏乐趣！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重装机兵不能不说的神器，据说是因为翻译导致的BUG造成的。使用军号后会将己方防御力提升到极高，而&lt;strong&gt;冲撞攻击&lt;/strong&gt;的判定依靠的就是防御力。买个撞击板（战车道具，在塔镇有卖），使用军号，一击秒最终BOSS。&lt;/p&gt;
&lt;p&gt;获得方法：在奥多的第二个自动售货机（卖炮弹的）抽奖有几率获得。&lt;/p&gt;
&lt;h2 id=&#34;罗克&#34;&gt;罗克&lt;/h2&gt;
&lt;p&gt;虽然一般情况下我们是把一个镇子的剧情全部触发完才进入下一个镇子的，但在奥多买装备实在太亏了，因为往北走不久就是&lt;strong&gt;罗克&lt;/strong&gt;镇。&lt;/p&gt;
&lt;p&gt;路上遇到什么怪物尽量逃跑吧，反正这一次主要是买东西以及记录个传送点。路上会遇到&lt;strong&gt;地震&lt;/strong&gt;，然而好像并不会影响什么。&lt;/p&gt;
&lt;h3 id=&#34;买车&#34;&gt;买车&lt;/h3&gt;
&lt;p&gt;在奥多东南的码头有一个建筑物，其中有个人出售战车。按照道理说刚刚玩到这里应该是买不起的，当然如果提前刷了复制战车BUG自然没问题。&lt;/p&gt;
&lt;p&gt;对方让你出价，这就很烦，不知道具体应该是多少钱。我是先出1G，然后每次乘10直到他同意为止，最后好像花了10w吧。据说通过一定的套路4w就能拿下，懒得搞了。&lt;/p&gt;
&lt;p&gt;这个战场性能不错，毕竟本来就是为了后来设计的。&lt;/p&gt;
&lt;h3 id=&#34;异形以及万能钥匙&#34;&gt;异形以及万能钥匙&lt;/h3&gt;
&lt;p&gt;与屋子里一人对话，拿到钥匙，打开旁边屋子门，在某个衣柜里面，调查与异形战斗。有点难打，打完给1k，然后回去对话，就能拿到&lt;strong&gt;扳手&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;扳手能撬开这世界上绝大部分锁，部分电脑控制的不行。&lt;/p&gt;
&lt;p&gt;在码头最里面的建筑物，撬开锁后可以拿到一些没啥用处的装备和一些钱，估计是为了演示万能钥匙的使用。&lt;/p&gt;
&lt;h3 id=&#34;马歇尔&#34;&gt;马歇尔&lt;/h3&gt;
&lt;p&gt;在罗克西边的医院里面，有通缉犯马歇尔。需要准备的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;酸瓶*2&lt;/li&gt;
&lt;li&gt;回复药剂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;白刃战，第一波全体扔酸瓶，然后直接打吧。&lt;/p&gt;
&lt;p&gt;打败马歇尔后可以获得一辆战车，是一辆救护车，移动时还可以给乘员加血……&lt;/p&gt;
&lt;h2 id=&#34;弗里&#34;&gt;弗里&lt;/h2&gt;
&lt;p&gt;没有路了，游戏就到此结束了吗？&lt;/p&gt;
&lt;p&gt;并不是，由罗克向东北走到海边，看到海里那棵树，往回走，走到看不见的位置继续，遇到一波敌人打败后再次到海边，海水就会退潮，看到有洞口露出。穿过这个洞穴，向北走，就可以看到冰冻的小镇&lt;strong&gt;弗里&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;冰面行走&#34;&gt;冰面行走&lt;/h3&gt;
&lt;p&gt;如何进入中间主要建筑物要花不少心思呢。正确的路线：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;冲树向上开&lt;/li&gt;
&lt;li&gt;向左&lt;/li&gt;
&lt;li&gt;向上&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;由于BUG，还有另一种方法，就是在冰面上调出“装备”菜单人物就会停下，停在任何位置！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;大象&#34;&gt;大象&lt;/h3&gt;
&lt;p&gt;问如何把大象放冰箱里，第一步……咳咳，好吧，这游戏应该是在赵本山的小品之前出的，不知道为啥这里会有这么多冰箱。&lt;/p&gt;
&lt;p&gt;准备工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;装备更新换代&lt;/li&gt;
&lt;li&gt;补充弹药装甲&lt;/li&gt;
&lt;li&gt;购买特殊炮弹&lt;strong&gt;烟雾弹&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不得不说烟雾弹是神器啊，降低对方命中和防御，效果还能叠加，对付大象再好不过了。打完大象可以拿到&lt;strong&gt;象牙&lt;/strong&gt;，没有特殊剧情，就是比较值钱而已。&lt;/p&gt;
&lt;h3 id=&#34;被掩埋的战车&#34;&gt;被掩埋的战车&lt;/h3&gt;
&lt;p&gt;在弗里有传闻沙滩里掩埋了一辆战车。准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;探测器&lt;/li&gt;
&lt;li&gt;最强的群组攻击的副炮（主炮可以暂时拆下来放仓库，多带些装甲片）&lt;/li&gt;
&lt;li&gt;补充装甲片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多童鞋没有刷BUG开老金的，这时估计并没有拿到花钱的那个战车，这时凑够三个就必须算上马歇尔的那个救护车了。然而救护车没有炮洞，只能代步，很多人只知道去伊尔的&lt;strong&gt;铁洞&lt;/strong&gt;工厂，却不知道在罗克的神秘人帐篷就已经能提供这个服务了。去那里打个副炮的洞，马歇尔的这救护车引擎非常好，能带不少的装甲片。&lt;/p&gt;
&lt;p&gt;需要面临的主要敌人：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;激光蚓
激光蚓攻击力和攻速很高，但防御较差。&lt;/li&gt;
&lt;li&gt;地雷龟
一般打就好，但有可能潜入地下等你踩雷，探测器可以探测到。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没什么好说的，用探测器慢慢探就好了。&lt;/p&gt;
&lt;h3 id=&#34;炸大楼&#34;&gt;炸大楼&lt;/h3&gt;
&lt;p&gt;主要剧情是追着一个女孩子跑。注意点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;女孩走过的不只有楼梯，有的会在阳台出去在外面跑。&lt;/li&gt;
&lt;li&gt;去顶楼见男人跟着走时狐疑不要掉下去，不要提前自己坐上电梯，也不要离太远被拉下。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;伊尔&#34;&gt;伊尔&lt;/h2&gt;
&lt;p&gt;没多少剧情。虽然在设定上是个大镇，但真的没有什么剧情。铁洞工厂前文提到了，有个舞女请求讨山贼报仇，可惜没有任务系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不要在伊尔换装备，比较亏，去西南的无歌村买。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;无歌村&#34;&gt;无歌村&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;多么萧条的村子啊，今天又喝多了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无歌村是一个因为山贼的侵袭正在不断变得萧条的镇子，在这里可以换一拨装备。&lt;/p&gt;
&lt;h3 id=&#34;瓦鲁&#34;&gt;瓦鲁&lt;/h3&gt;
&lt;p&gt;在无歌村有山贼，可以在那里打了，也可以不打，到渡口去打。那三个山贼都是瓦鲁的部下。&lt;/p&gt;
&lt;p&gt;路上埋了5颗地雷，可以用探测器慢慢探，也可以趟过去，反正炸一下影响也不大。&lt;/p&gt;
&lt;p&gt;打瓦鲁注意先打部下，因为会催眠，很恶心。&lt;/p&gt;
&lt;h3 id=&#34;v48&#34;&gt;V48&lt;/h3&gt;
&lt;p&gt;重装机兵有很多隐藏物品，像是彩蛋一样的。本文中基本没有提及隐藏物品，不过这个引擎实在有些重要。&lt;/p&gt;
&lt;p&gt;大地图（南9 东4），可获得v48引擎。这个v48与在商店里面买到的v24升级的v48不同，可以继续升级为v66、v100（据说后者叫v48超人型，这个叫v48金刚型，也不知道啥意思），而v100是这个游戏中最强的发动机之一。&lt;/p&gt;
&lt;h3 id=&#34;神秘人&#34;&gt;神秘人&lt;/h3&gt;
&lt;p&gt;神秘人在过了渡口就可能出现，外貌是神风弹的样子，也不攻击，在一定回合后逃跑。不用强求，在高等级后回来刷一波带走就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;据说在神秘商人营地的三棵树附近出现概率较高。
据说被酸腐蚀后就不会逃跑，没有试过是不是真的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;索鲁&#34;&gt;索鲁&lt;/h2&gt;
&lt;p&gt;过了渡口向东走即可到达索鲁。&lt;/p&gt;
&lt;h3 id=&#34;异型鱼与眼镜&#34;&gt;异型鱼与眼镜&lt;/h3&gt;
&lt;p&gt;准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更换人类装备&lt;/li&gt;
&lt;li&gt;购买几个&lt;strong&gt;穿甲弹&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;防御超高，只能上穿甲弹。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先先去找电脑排空污水，否则下水道里面一堆水鬼很不好惹。
记得拿下水道里面的&lt;strong&gt;眼镜&lt;/strong&gt;，最终人类武器四镜片之一。
打完异型鱼在另外一个下水道口出去，可以获得一辆战车。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;伊甸&#34;&gt;伊甸&lt;/h2&gt;
&lt;p&gt;记得第一次完老奇怪为啥传真的传送点空了一个，就是因为我把伊甸错过去了。在索鲁出来，贴着森林向西走，就会发现伊甸的入口。&lt;/p&gt;
&lt;p&gt;伊甸的人都住在火车车厢里面，不知道是什么习俗。在这里建议升级一下战车装备，因为后面有不少硬仗要打。&lt;/p&gt;
&lt;h3 id=&#34;蜈蚣&#34;&gt;蜈蚣&lt;/h3&gt;
&lt;p&gt;从伊甸东南的山洞进入，走到没路为止，调查墙上的裂缝，开炮，然后就能走了。&lt;/p&gt;
&lt;p&gt;在原来不能走的这个位置，遇到蜈蚣的几率很高，没什么要注意的，A过去就行了。&lt;/p&gt;
&lt;h3 id=&#34;东京塔与卫星地图&#34;&gt;东京塔与卫星地图&lt;/h3&gt;
&lt;p&gt;东京塔里面有很多人偶，不用很在意。有一个老人，要你找回玛丽莲偶人，可以做，需要去下水道，有许多水鬼比较难打。送回后可以得到一套&lt;strong&gt;金甲&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有一个偶人一直在挡路，可以推一下红色的偶人，挡住它。&lt;/p&gt;
&lt;p&gt;在东京塔顶层对话得到&lt;strong&gt;地图&lt;/strong&gt;。地图有两个作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在非战斗状态大地图下，可以查看大地图以及自己所在的位置。&lt;/li&gt;
&lt;li&gt;在战斗中，可以给卫星信号，有几率触发卫星攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;据说是神器，但在我看来用处不大。&lt;/p&gt;
&lt;h3 id=&#34;戈麦斯&#34;&gt;戈麦斯&lt;/h3&gt;
&lt;p&gt;过了大瀑布，正好遇到戈麦斯阴死红狼，并说出那句特别知名但在续作被打脸无数的话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;血肉之躯是无法与战车匹敌的。
拿到红狼战车，红狼临死说要告诉尼娜“忘了我吧”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;红狼，一个一共就出场了三次的配角，却成功给玩家留下深刻印象，很多人都在研究怎样能让红狼不死。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;疯狂练级，主角等级高到一定程度，红狼就会以血肉之躯打败戈麦斯，然后还是死了，不过主角的名字会变成“狼”。
在开始打战狗时逃跑，可以拿到战车，这样再次打战狗就又可以见到红狼一次。
通过调游戏配色把主角造型替换成红狼。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同人重制版《重装机兵：梦想起飞》红狼也没有死，而是加入了主角队伍。&lt;/p&gt;
&lt;h2 id=&#34;塔镇&#34;&gt;塔镇&lt;/h2&gt;
&lt;p&gt;塔镇的装备不错，可以在这里换一拨。&lt;/p&gt;
&lt;h3 id=&#34;洗车&#34;&gt;洗车&lt;/h3&gt;
&lt;p&gt;战车道具中出现用不能用，扔也扔不掉的“鸟粪”、“铅竹”？去洗车洗掉就可以了。全游戏唯一可以洗车的地方，就在塔镇。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说实话，这些东西可以到拉多财产保管存仓库里，这样就不占地方了。所以，又一个BUG……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;沙漠之舟&#34;&gt;沙漠之舟&lt;/h3&gt;
&lt;p&gt;在“飞猪阵”出现概率较高（就是大地图上看上去像一只鸟的地方），没什么注意的，A过去吧。&lt;/p&gt;
&lt;h3 id=&#34;弗朗&#34;&gt;弗朗&lt;/h3&gt;
&lt;p&gt;在西北方向的垃圾站，人类战，要是感觉不稳可以买些烟雾。&lt;/p&gt;
&lt;h2 id=&#34;地狱门&#34;&gt;地狱门&lt;/h2&gt;
&lt;p&gt;红色机器人会与你战斗，比较难打，蓝色机器人可以储存游戏记录。&lt;/p&gt;
&lt;h2 id=&#34;阳平关&#34;&gt;阳平关&lt;/h2&gt;
&lt;p&gt;在“飞猪阵”的上方，这里卖的装备相当不错，还有“储存箱”，可以随时随地保存游戏记录的战车装备（可惜出现太晚了）。&lt;/p&gt;
&lt;h2 id=&#34;卡拉&#34;&gt;卡拉&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;沿着山体向南，到达最后一个镇子。&lt;/li&gt;
&lt;li&gt;首先与酒店老板对话，得知有一个一直被欺负的小孩喜欢玩火。&lt;/li&gt;
&lt;li&gt;然后去西北的研究所找博士讨论关于激光炮的事。（研究所可以拿到一辆战车）&lt;/li&gt;
&lt;li&gt;从研究所出来，发现着火了。&lt;/li&gt;
&lt;li&gt;去塔镇买个灭火器成功灭火&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后，是不是有点眼熟？没错，前面是拉多，惊喜不惊喜，意外不意外？&lt;/p&gt;
&lt;p&gt;在烧毁的地方用探测器可以找到220炮（最强主炮）。&lt;/p&gt;
&lt;p&gt;中间有一座房子，进去可以遇到“波特”以及获得光镜。&lt;/p&gt;
&lt;h2 id=&#34;地狱门-1&#34;&gt;地狱门&lt;/h2&gt;
&lt;h3 id=&#34;帕鲁&#34;&gt;帕鲁&lt;/h3&gt;
&lt;p&gt;在地狱门西北，可以进入帕鲁的山洞。红狼的老相好就是被他抓走了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你开的是红狼的战车，打完帕鲁尼娜冲出山洞叫着红狼的名字，死了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果不是，尼娜会说会一直等红狼。(直到你开红狼战车出现，参照上条)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;诺亚&#34;&gt;诺亚&lt;/h3&gt;
&lt;p&gt;一个打不死的最终BOSS，主要作用是告诉你事情的前因后果，表达游戏的主题，以及让你可以多玩一段时间。&lt;/p&gt;
&lt;p&gt;在诺亚基地（地球拯救中心）可以找到很多装备，找到激光炮的最后一枚镜片&lt;strong&gt;太阳镜&lt;/strong&gt;。建议第一次去先解决每个楼层的巨型炮。按照咱现在战车的配置，基本是一炮一个或者两炮一个，很有复仇的感觉。&lt;/p&gt;
&lt;p&gt;完。&lt;/p&gt;
- https://ntutn.top/posts/%E9%87%8D%E8%A3%85%E6%9C%BA%E5%85%B5/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>我的理想——我的一篇日记</title>
        <link>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</link>
        <pubDate>Sun, 24 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/ -&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;我的理想我的一篇日记&#34;&gt;我的理想——我的一篇日记&lt;/h1&gt;
&lt;p&gt;一不小心翻到了以前初中写的一篇日记，为了装X还是用英文写的，羞耻度爆表……&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Wednesday, December 26, 2012
Sunday&lt;/p&gt;
&lt;p&gt;Today we learned how to talk about future intentions. Iwant to be a programmer when I grow up. So how am I going to do it? I’m goingto study computer science and English when I have free time. It’s veryimportant. I learned Visual Basic. It was made by Microsoft. I can make someprogram now. On my last summer vacation, I made some programs, like notepad. Forexample, the program was made for a math problem:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vb&#34; data-lang=&#34;vb&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Sub&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;Main&lt;/span&gt;()
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Const&lt;/span&gt; 兔脚数 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Integer&lt;/span&gt; = 4, 鸡脚数 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Integer&lt;/span&gt; = 2
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Dim&lt;/span&gt; 总头数 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Long&lt;/span&gt;, 总脚数 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Long&lt;/span&gt;, 鸡的数量 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Long&lt;/span&gt;, 兔的数量 &lt;span style=&#34;color:#8b008b&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;Long&lt;/span&gt;
总头数 =Val(InputBox(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;从上面看一共有多少个头？&amp;#34;&lt;/span&gt;))
总脚数 =Val(InputBox(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;从下面看一共有多少只脚？&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;If&lt;/span&gt; (总头数 &amp;lt; 0) &lt;span style=&#34;color:#8b008b&#34;&gt;Or&lt;/span&gt; (总脚数 &amp;lt; 0) &lt;span style=&#34;color:#8b008b&#34;&gt;Or&lt;/span&gt; (总头数 * 2 &amp;gt; 总脚数) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Then&lt;/span&gt;
    MsgBox &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;输入有误！&amp;#34;&lt;/span&gt;, vbExclamation
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Exit&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Sub&lt;/span&gt;
&lt;span style=&#34;color:#008b45&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;If&lt;/span&gt;
鸡的数量 = (兔脚数 * 总头数 - 总脚数) / (总脚数 - 鸡脚数)
兔的数量 = 总头数 - 鸡的数量
计算结果 = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;鸡有&amp;#34;&lt;/span&gt; &amp;amp; 鸡的数量 &amp;amp; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;只，兔有&amp;#34;&lt;/span&gt; &amp;amp; 兔的数量 &amp;amp; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;只。&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Call&lt;/span&gt; bcjg
MsgBox 计算结果, vbInformation
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;Sub&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see a form on the screen if the program isrunning. Input the number of heads and click the button “OK”. Then you can seeanother form on the screen. You can input the number of feet. Click the button “OK”again. Finally, you can see the result.&lt;/p&gt;
&lt;p&gt;I sent my programs to my friends by e-mail.&lt;/p&gt;
&lt;p&gt;I want to make a company. I call it WonderfulSoft. Iknow it’s very difficult. But I hope one day my dream can be true.&lt;/p&gt;
&lt;p&gt;My IT teacher said: “Java is more useful than VisualBasic. Because the program was made by it can run on the many systems.” I alsowant to learn it. But it is too difficult to learn. I think I’ll learn to makeprograms by Java.&lt;/p&gt;
- https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/ - CC BY-SA 4.0</description>
        </item>
    
    
    
        <item>
        <title>零梦</title>
        <link>https://ntutn.top/posts/%E9%9B%B6%E6%A2%A6/</link>
        <pubDate>Sun, 24 Mar 2019 03:11:37 +0800</pubDate>
        
        <guid>https://ntutn.top/posts/%E9%9B%B6%E6%A2%A6/</guid>
        <description>归零幻想 https://ntutn.top/posts/%E9%9B%B6%E6%A2%A6/ -&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;做了一个有点意思的梦，细思极恐，所以特地记录一下。&lt;/p&gt;
&lt;h2 id=&#34;d1&#34;&gt;D1&lt;/h2&gt;
&lt;p&gt;我是一名初中生，一个学习非常好的中学生，我们国家有一项政策，就是学习非常好的初三学生不必在初中浪费时间，可以提前去上高中，只要到时候回来象征性参加中考就行了，而我这就是准备回家参加中考。我给家里打电话说让放心，然后打开手机地图搜索路线。&lt;/p&gt;
&lt;p&gt;雾很大，公交一辆一辆开过，我发现可以坐火车，坐火车是最快的。只要坐524，就能直接到达。我从入口走进，路过卖各种东西的，猪肉、水果以及其他。只有一条路，只有一个车厢，我走进，里面有一个人，正在抽烟。我问对方是不是524，对方说不知道，自己还有一站下车，这时火车开动了，而我也猛然发现车上写着522。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;d2&#34;&gt;D2&lt;/h2&gt;
&lt;p&gt;我被告知自己刚刚差不多是在做梦。想想也是，不符合逻辑的地方很多，首先我们初中生可以去高中体验这种诡异政策什么时候有的？车站又怎么会卖这些乱七八糟的？&lt;/p&gt;
&lt;p&gt;但说起来吓人，刚刚我不但一点意识不到自己在做梦，而且真的相信自己是一个初中生，真的有这奇葩的政策。&lt;/p&gt;
&lt;p&gt;某公司说，这是一个实验项目，主要是用于研究梦与记忆之间的关系，梦中出现的大概很多都是你心中相当害怕的事物，比如你一直在找各种交通工具就大概反映你现实是一个路痴，诸如此类。说的不错，我的确是个路痴，那按照这个说法，这个车站很值得怀疑啊，因为我不是第一次梦见这个一看就很奇怪的车站了，在以前的梦里曾经有在这个车站发生凶杀案，也就是说我曾经在某个车站类似的地方有过糟糕的经历了？总感觉自己缺了一段记忆。&lt;/p&gt;
&lt;h2 id=&#34;d3&#34;&gt;D3&lt;/h2&gt;
&lt;p&gt;我从迷蒙中清醒，脑子还是有点混乱，这里正在打仗，不对，按照规模来看，应该是两伙人在打群架，但狠辣的手法和波及到的人数占总人数的比例来看，这又是战争无疑，而且在我的观察中，我们好像并不是正义的一方。一个和尚追着我说我是他徒弟，我说自己是学生之类都会被他说是胡思乱想。不准我读书，只让我跟他学习功法。等我实在忍无可忍，就说你这两下子我也会，看他把木棍当做飞镖投向目标，我就拿起一根金针，精准地扔向他的一根白发并且成功命中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我就是有这样的能力，和尚就是应该有头发，这是理所当然的。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;d0&#34;&gt;D0&lt;/h2&gt;
&lt;p&gt;我睁开眼睛，拿起手机看了看时间，大概才六点。我不是一个初中生，我没有在配合神秘组织做实验，我不是奇怪的和尚的徒弟，我是一名大学生，最近在写一个个人博客的程序，最近买的蓝牙键盘刚刚到货。我昨晚睡得很晚，但现在一点都不困。我还在想前面这个嵌套的梦，我觉得正好可以用蓝牙键盘连接手机把这个梦写出来，发到博客里面。只是我又鬼使神差地说了一句：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;溺死在零梦里吧。
我不以为然，认为这是自己吓自己，感觉自己不该这么中二才对，于是起床准备洗漱了……&lt;/p&gt;
&lt;/blockquote&gt;
- https://ntutn.top/posts/%E9%9B%B6%E6%A2%A6/ - CC BY-SA 4.0</description>
        </item>
    
    
  </channel>
</rss> 