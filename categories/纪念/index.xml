<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>纪念 on 归零幻想</title>
    <link>https://ntutn.top/categories/%E7%BA%AA%E5%BF%B5/</link>
    <description>Recent content in 纪念 on 归零幻想</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>CC BY-SA 4.0</copyright>
    <lastBuildDate>Tue, 26 Jan 2021 03:11:37 +0800</lastBuildDate><atom:link href="https://ntutn.top/categories/%E7%BA%AA%E5%BF%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的黑历史被github埋到北极了</title>
      <link>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E9%BB%91%E5%8E%86%E5%8F%B2%E8%A2%ABgithub%E5%9F%8B%E5%88%B0%E5%8C%97%E6%9E%81%E4%BA%86/</link>
      <pubDate>Tue, 26 Jan 2021 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E9%BB%91%E5%8E%86%E5%8F%B2%E8%A2%ABgithub%E5%9F%8B%E5%88%B0%E5%8C%97%E6%9E%81%E4%BA%86/</guid>
      <description>昨天整理自己的github仓库的时候发现自己的个人主页多了个徽章：Arctic Code Vault Contributor
So what happened?
GitHub Code Vault是什么  GitHub Code Vault（GitHub 代码保险库）是由 GitHub Archive Program（GitHub 代码永久保存计划）设立的代码档案库，旨在保存开源软件以供未来使用。1
 天灾人祸，世界末日，地球回到原始时代重新发展，或者betacat污染了所有开源代码库啦，人类就可以找到这份代码库，重建网络世界。
该项目给github上活跃的开源代码库建立快照，将他们存储在胶片上运往北极。据称这些代码将被保存至少1000年。
每个细节都充满了科幻的味道，比如考虑一前年后的人类不一定读懂今天的代码，在《GitHub Code Vault 指南》中介绍了二进制、计算机、软件、编译等基本概念，以及如何解码胶片上的信息。 当然，这个指南本身并没有被压缩和编码，他们没有犯某些网站的RARSetup.rar的错误。
考虑到地球文明重建，人类不一定造出了计算机，于是还放了一份科技树指南，包含理解软件所需的多层技术基础，如微处理器、网络、电子、半导体，甚至工业社会前的技术。有了这些技术，让人类可以重新造出现代计算机。
我的被选中的代码库 ctodo https://github.com/zerofancy/ctodo
一个终端todo工具。c不是指C语言，而是console（事实上这个项目是java写的）。
项目代码本身写的很垃圾，也就这个主意有点意思。在终端直接管理TODO List，听上去不错，但我没有坚持用太久。后来还是觉得有GUI的todo工具更好，比如微软的待办事项。
然而即使是这个主意，我也找到了更好的实现：devtodo，所以我的那个仓库也就不再维护了。
noveldownloader https://github.com/zerofancy/noveldownloader
一个用Java+selenium写的小说下载器，基本原理就是模仿用户不断点“下一页”
没错，这个项目就是我看小说不想买正版又忍受不了盗版的广告时写的。当然因为是自用所以代码写的很随意，这不说放到1000年后，就是一两年后也是妥妥的黑历史啊……
吃瓜 Dress被选中了 你们的照片现在已经被冰封在北极了。。。
女装一时爽，破照留千年。坦白讲，除了公司的项目，我克隆过的最大的项目就是Dress
虽然该项目会忽略大于100KB的二进制文件，但这个限制会随着star数逐渐解除。考虑到这个项目的star数……为1000年后的考古学家的头发默哀3秒。
996.icu被选中了 https://996.icu/#/zh_CN
我的代码留点bug给后世解决不算什么，但996.icu也被选中了。这下真的被钉到历史的耻辱柱上了……
面向Stackoverflow编程 不同时快照一份 stackoverflow ，后代也不会抄啊。2
大家还贡献了什么 dotfile、Github Pages、个人演讲库和个人网站、给女朋友的信，听说鸿蒙的ppt也在里面……
参考  除了bug，GitHub可能还把你的女装照冻到了北极，1000年后还能读那种 https://archiveprogram.github.com/ GitHub Archive Program: the journey of the world’s open source code to the Arctic    GitHub Code Vault 指南&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>记Lenovo V310 15 IKB的第n次死机</title>
      <link>https://ntutn.top/posts/%E8%AE%B0lenovo_v310_15_ikb%E7%9A%84%E7%AC%ACn%E6%AC%A1%E6%AD%BB%E6%9C%BA/</link>
      <pubDate>Wed, 01 Jan 2020 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E8%AE%B0lenovo_v310_15_ikb%E7%9A%84%E7%AC%ACn%E6%AC%A1%E6%AD%BB%E6%9C%BA/</guid>
      <description>今天我的电脑又死机了，首先切一下tty进不去，然后试下SysRq键没反应，熟练地按住电源10秒，松开两秒，再按一下，拿出手机刷会空间。
这电脑刚买的时候给我的印象其实是不错的，虽然外壳线条有点丑粗犷，但整体性能比我预期要好很多。i5的CPU，1T机械硬盘，入门级Radeon独显，毕竟价格摆在那里。
因为没有固态硬盘，这电脑慢的很，但我安慰自己反正我也不怎么打游戏。日常尽量不用UWP应用，开机刷会手机，佛系一点也没什么不好。谁说学软件就一定要用好电脑？Code Blocks不香吗？eclipse有几个电脑带不动？实在偶尔想配置安卓开发环境的时候就连自己安卓手机做测试，至于VS就不用想了，虽然号称世界上最好用的IDE，但比较新的版本没有固态硬盘反应跟不上打字……
本来也就这样了，一分钱一分货的事。但直到某次电脑毫无征兆死机……
死机是正常现象，没什么好怕的。我这样告诉自己。我当时正在浏览网页不要多想，不是那种满屏都是澳门首家线上赌场广告的网页，毫无征兆就死机了。一般来说，所谓死机多是资源占用过高系统失去响应的原因，根据自己的经验，按组合键尝试调出任务管理器尝试结束进程，然后没有成功。貌似死机很彻底，任务管理器根本无法调出，甚至鼠标都不能动。我放下电脑，看了集哆啦A梦，回头看电脑屏幕没有要变化的征兆。没办法，按住电源键强制关机吧。后面很久这个事情都没有再出现，我也就渐渐忘了。
直到又有一天，在我玩《狂野飙车8：极速凌云》正高兴的时候，画面突然不动了。这扫兴的事让我没了继续玩的兴致，而后几天又死机几次，我觉得事情没有那么简单，在网上搜索时，我发现我这不是个例。
之后我加固态硬盘装双系统，死机就跟着我到了ubuntu。一般来说，ubuntu死机多是指gnome卡死，直接Alt+F2输入r就能重启，不这样做也可以切tty进入命令操作，直到某次放歌的时候死机了，歌声都停了，别说tty了，连SysRq键都没能正常工作，这表明连linux内核都死掉了。好吧，现在有足够证据表明死机不是Windows的锅。
想把电脑送去修，但很麻烦的是，这个问题复现很困难，死机是不定期的，似乎跟资源占用无关，跟电脑温度无关。先不考虑电脑店能不能找到原因，就算电脑店说修好了，我也没办法验证。我觉得就这样送去修最大可能就算店家给你重装了下系统，清了下灰，升级了下BIOS，这些我都试过了没有用。
后来一直没有解决这件事，只是我养成了随手Ctrl+S的习惯。
不管怎样，今天偶发性的连续死机两次惹恼我了，联想会进我的黑名单。</description>
    </item>
    
    <item>
      <title>图书管理系统</title>
      <link>https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 13 Apr 2019 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      <description>翻出了以前写的C++作业，图书管理系统，虽然挺简单的，但留下纪念下吧。
#include &amp;lt;iostream&amp;gt;#include&amp;lt;cstdlib&amp;gt;#include&amp;lt;cstring&amp;gt;#include&amp;lt;fstream&amp;gt;using namespace std; class CUser { private: int code; //表示用户编号；  char name[20]; //表示用户姓名 public: CUser() { ; }; // 默认构造函数  CUser(int id, char na[]) { code=id; strcpy(name,na); }; //构造函数，初始化用户信息  void setcode(int n) { code=n; }; //用来设置用户编号  int getcode() { return code; }; //用来获取用户编号  void setname(char na[]) { strcpy(name,na); }; //用来设置用户姓名  char* getname() { return name; }; //用来获取用户姓名  void show() { cout&amp;lt;&amp;lt;&amp;#34;用户编号：&amp;#34;&amp;lt;&amp;lt;code&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;&amp;#34;姓名：&amp;#34;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;endl; }; //用来显示用户的基本信息 }; class CBook { private: int code; //图书编号  char name[20]; //图书名称  bool Is_Stock; //true为在架，false为借出  bool Is_Existing; //true为存在, false为删除 public: CBook() { ; }; //默认构造函数  CBook(int no,char na[]) { code=no; strcpy(name,na); Is_Stock=true; Is_Existing=true; }; //构造函数，初始化图书信息  void setcode(int n) { code=n; }; //设置图书编号  int getcode() { return code; }; //获取图书编号  void setname(char na[]) { strcpy(name,na); }; //设置图书名称  char* getname() { return name; }; //获取图书名称  bool get_Stock() { return Is_Stock; }; //获取图书是否在库信息  void set_Stock(bool isstock) { Is_Stock=isstock; };// 设置图书是否在库信息  bool get_Existing() { return Is_Existing; };//获取存在标志  void set_Existing(bool isex) { Is_Existing=isex; };//设置存在标志 }; class CReader:public CUser { private: bool Is_Existing; //true存在，false删除  bool Is_Borrowing; //true借过书，false没有借书  CBook brbook; //表示读者所借的图书 public: CReader() { CUser(); }; //构造函数，初始化读者信息  CReader(int id, char na[]) { CUser(id,na); }; //构造函数，初始化读者信息  bool get_Existing() { return Is_Existing; }; //用来获取删除标志  void set_Existing(bool isex) { Is_Existing=isex; }; //用来设置删除标志  bool get_Borrowing() { return Is_Borrowing; }; //用来获取读者借阅情况  void set_Borrowing(bool isbo) { Is_Borrowing=isbo; }; //用来设置读者借阅情况  void setbrbook(CBook bt) { brbook=bt; Is_Borrowing=true; }; //用来记录读者结束信息  CBook getbrbook() { return brbook; }; //用来获取读者结束信息  void show() { CUser::show(); if(Is_Borrowing) { cout&amp;lt;&amp;lt;&amp;#34;当前借书：&amp;#34;&amp;lt;&amp;lt;brbook.</description>
    </item>
    
    <item>
      <title>我的理想——我的一篇日记</title>
      <link>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</link>
      <pubDate>Sun, 24 Mar 2019 03:11:37 +0800</pubDate>
      
      <guid>https://ntutn.top/posts/%E6%88%91%E7%9A%84%E7%90%86%E6%83%B3%E6%88%91%E7%9A%84%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</guid>
      <description>我的理想——我的一篇日记 一不小心翻到了以前初中写的一篇日记，为了装X还是用英文写的，羞耻度爆表……
Wednesday, December 26, 2012 Sunday
Today we learned how to talk about future intentions. Iwant to be a programmer when I grow up. So how am I going to do it? I’m goingto study computer science and English when I have free time. It’s veryimportant. I learned Visual Basic. It was made by Microsoft. I can make someprogram now. On my last summer vacation, I made some programs, like notepad.</description>
    </item>
    
  </channel>
</rss>
